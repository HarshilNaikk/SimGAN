/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
/home/harshil/work/simgan_lti/load.py:40: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  df = df.append(data,)
Getting Data...
Preparing Data...
Processed data for 10 file(s)
Processed data for 20 file(s)
Processed data for 30 file(s)
Processed data for 40 file(s)
Processed data for 50 file(s)
Processed data for 60 file(s)
Processed data for 70 file(s)
Processed data for 80 file(s)
Processed data for 90 file(s)
Processed data for 100 file(s)
Processed data for 110 file(s)
Processed data for 120 file(s)
Processed data for 130 file(s)
Processed data for 140 file(s)
Processed data for 150 file(s)
Processed data for 160 file(s)
Processed data for 170 file(s)
Processed data for 180 file(s)
Processed data for 190 file(s)
Processed data for 200 file(s)
Getting Data...
Preparing Data...
Processed data for 10 file(s)
Processed data for 20 file(s)
Processed data for 30 file(s)
Processed data for 40 file(s)
Processed data for 50 file(s)
Processed data for 60 file(s)
Processed data for 70 file(s)
Processed data for 80 file(s)
Processed data for 90 file(s)
Processed data for 100 file(s)
Processed data for 110 file(s)
Processed data for 120 file(s)
Processed data for 130 file(s)
Processed data for 140 file(s)
Processed data for 150 file(s)
Processed data for 160 file(s)
Processed data for 170 file(s)
Processed data for 180 file(s)
Processed data for 190 file(s)
Processed data for 200 file(s)
PRINTING SHAPES OF THE TWO DATA INPUTS -
(3600, 3)
(3600, 2)
(3599, 5)
First Obs = tensor([ 1.4983,  9.4701, -7.6056], device='cuda:0')
----------------
torch.Size([3])
torch.Size([3])
----------------
tensor([ 1.4983,  9.4701, -7.6056])
ACTION
tensor([0.1920, 0.2194])
SYSTEM ACTUAL ACTION HERE
[-7.61]
NEXT STATE RIGHT HERE
[ 2.04 -0.19]
HEHEHEHEHEHEHEHEHEH
tensor([0.1920, 0.2194])
tensor([ 1.4983,  9.4701, -7.6056], device='cuda:0')
tensor([ 2.0400, -0.1889], device='cuda:0')
action = tensor([0.1920, 0.2194])
obs = tensor([[ 1.4983,  9.4701, -7.6056]], device='cuda:0')
value = tensor([-0.7416], device='cuda:0')
action_log_prob = tensor([-1.5532], device='cuda:0')
ACTION
tensor([-0.4011,  0.2769])
SYSTEM ACTUAL ACTION HERE
[3.2]
NEXT STATE RIGHT HERE
[-3.08  3.19]
HEHEHEHEHEHEHEHEHEH
tensor([-0.4011,  0.2769])
tensor([ 2.0400, -0.1889, -7.6056], device='cuda:0')
tensor([-3.0788,  3.1862], device='cuda:0')
action = tensor([-0.4011,  0.2769])
obs = tensor([[ 2.0400, -0.1889, -7.6056]], device='cuda:0')
value = tensor([-0.6685], device='cuda:0')
action_log_prob = tensor([-1.3779], device='cuda:0')
ACTION
tensor([0.4559, 0.2218])
SYSTEM ACTUAL ACTION HERE
[-7.83]
NEXT STATE RIGHT HERE
[2.14 0.37]
HEHEHEHEHEHEHEHEHEH
tensor([0.4559, 0.2218])
tensor([-3.0788,  3.1862,  3.1986], device='cuda:0')
tensor([2.1446, 0.3748], device='cuda:0')
action = tensor([0.4559, 0.2218])
obs = tensor([[-3.0788,  3.1862,  3.1986]], device='cuda:0')
value = tensor([0.1219], device='cuda:0')
action_log_prob = tensor([-1.7731], device='cuda:0')
ACTION
tensor([ 0.1105, -0.3978])
SYSTEM ACTUAL ACTION HERE
[2.77]
NEXT STATE RIGHT HERE
[ 2.81 -1.04]
HEHEHEHEHEHEHEHEHEH
tensor([ 0.1105, -0.3978])
tensor([ 2.1446,  0.3748, -7.8329], device='cuda:0')
tensor([ 2.8091, -1.0363], device='cuda:0')
action = tensor([ 0.1105, -0.3978])
obs = tensor([[ 2.1446,  0.3748, -7.8329]], device='cuda:0')
value = tensor([-0.7192], device='cuda:0')
action_log_prob = tensor([-1.1385], device='cuda:0')
ACTION
tensor([ 0.0683, -0.5913])
SYSTEM ACTUAL ACTION HERE
[5.21]
NEXT STATE RIGHT HERE
[3.34 0.63]
HEHEHEHEHEHEHEHEHEH
tensor([ 0.0683, -0.5913])
tensor([ 2.8091, -1.0363,  2.7685], device='cuda:0')
tensor([3.3377, 0.6261], device='cuda:0')
action = tensor([ 0.0683, -0.5913])
obs = tensor([[ 2.8091, -1.0363,  2.7685]], device='cuda:0')
value = tensor([0.2802], device='cuda:0')
action_log_prob = tensor([-0.9189], device='cuda:0')
ACTION
tensor([0.2258, 0.3470])
SYSTEM ACTUAL ACTION HERE
[4.26]
NEXT STATE RIGHT HERE
[5.43 3.5 ]
HEHEHEHEHEHEHEHEHEH
tensor([0.2258, 0.3470])
tensor([3.3377, 0.6261, 5.2086], device='cuda:0')
tensor([5.4266, 3.5033], device='cuda:0')
action = tensor([0.2258, 0.3470])
obs = tensor([[3.3377, 0.6261, 5.2086]], device='cuda:0')
value = tensor([0.2179], device='cuda:0')
action_log_prob = tensor([-0.6356], device='cuda:0')
ACTION
tensor([ 1.0302, -0.1095])
SYSTEM ACTUAL ACTION HERE
[4.36]
NEXT STATE RIGHT HERE
[25.29  1.89]
HEHEHEHEHEHEHEHEHEH
tensor([ 1.0302, -0.1095])
tensor([5.4266, 3.5033, 4.2645], device='cuda:0')
tensor([25.2893,  1.8892], device='cuda:0')
action = tensor([ 1.0302, -0.1095])
obs = tensor([[5.4266, 3.5033, 4.2645]], device='cuda:0')
value = tensor([-0.0178], device='cuda:0')
action_log_prob = tensor([-1.4904], device='cuda:0')
ACTION
tensor([-0.2079,  0.5364])
SYSTEM ACTUAL ACTION HERE
[35.27]
NEXT STATE RIGHT HERE
[ 9.51 -3.12]
HEHEHEHEHEHEHEHEHEH
tensor([-0.2079,  0.5364])
tensor([25.2893,  1.8892,  4.3585], device='cuda:0')
tensor([ 9.5115, -3.1192], device='cuda:0')
action = tensor([-0.2079,  0.5364])
obs = tensor([[25.2893,  1.8892,  4.3585]], device='cuda:0')
value = tensor([0.9026], device='cuda:0')
action_log_prob = tensor([-1.2136], device='cuda:0')
ACTION
tensor([ 0.4078, -0.0716])
SYSTEM ACTUAL ACTION HERE
[17.23]
NEXT STATE RIGHT HERE
[14.03  9.49]
HEHEHEHEHEHEHEHEHEH
tensor([ 0.4078, -0.0716])
tensor([ 9.5115, -3.1192, 35.2687], device='cuda:0')
tensor([14.0294,  9.4856], device='cuda:0')
action = tensor([ 0.4078, -0.0716])
obs = tensor([[ 9.5115, -3.1192, 35.2687]], device='cuda:0')
value = tensor([0.2982], device='cuda:0')
action_log_prob = tensor([-0.5441], device='cuda:0')
ACTION
tensor([ 0.6285, -0.3536])
SYSTEM ACTUAL ACTION HERE
[10.82]
NEXT STATE RIGHT HERE
[32.44  8.44]
HEHEHEHEHEHEHEHEHEH
tensor([ 0.6285, -0.3536])
tensor([14.0294,  9.4856, 17.2324], device='cuda:0')
tensor([32.4398,  8.4436], device='cuda:0')
action = tensor([ 0.6285, -0.3536])
obs = tensor([[14.0294,  9.4856, 17.2324]], device='cuda:0')
value = tensor([0.0485], device='cuda:0')
action_log_prob = tensor([-1.3595], device='cuda:0')
ACTION
tensor([ 0.8188, -0.2108])
SYSTEM ACTUAL ACTION HERE
[39.]
NEXT STATE RIGHT HERE
[68.08 29.29]
HEHEHEHEHEHEHEHEHEH
tensor([ 0.8188, -0.2108])
tensor([32.4398,  8.4436, 10.8243], device='cuda:0')
tensor([68.0816, 29.2907], device='cuda:0')
action = tensor([ 0.8188, -0.2108])
obs = tensor([[32.4398,  8.4436, 10.8243]], device='cuda:0')
value = tensor([0.8066], device='cuda:0')
action_log_prob = tensor([-1.2797], device='cuda:0')
ACTION
tensor([-0.0016,  0.3046])
SYSTEM ACTUAL ACTION HERE
[69.87]
NEXT STATE RIGHT HERE
[34.72  5.43]
HEHEHEHEHEHEHEHEHEH
tensor([-0.0016,  0.3046])
tensor([68.0816, 29.2907, 39.0038], device='cuda:0')
tensor([34.7169,  5.4261], device='cuda:0')
action = tensor([-0.0016,  0.3046])
obs = tensor([[68.0816, 29.2907, 39.0038]], device='cuda:0')
value = tensor([0.5570], device='cuda:0')
action_log_prob = tensor([-1.2916], device='cuda:0')
ACTION
tensor([ 0.0031, -0.1894])
SYSTEM ACTUAL ACTION HERE
[45.48]
NEXT STATE RIGHT HERE
[22.91 32.97]
HEHEHEHEHEHEHEHEHEH
tensor([ 0.0031, -0.1894])
tensor([34.7169,  5.4261, 69.8709], device='cuda:0')
tensor([22.9141, 32.9692], device='cuda:0')
action = tensor([ 0.0031, -0.1894])
obs = tensor([[34.7169,  5.4261, 69.8709]], device='cuda:0')
value = tensor([0.2152], device='cuda:0')
action_log_prob = tensor([-0.8768], device='cuda:0')
ACTION
tensor([-0.2607, -0.0458])
SYSTEM ACTUAL ACTION HERE
[-0.43]
NEXT STATE RIGHT HERE
[-25.98  -0.08]
HEHEHEHEHEHEHEHEHEH
tensor([-0.2607, -0.0458])
tensor([22.9141, 32.9692, 45.4819], device='cuda:0')
tensor([-25.9803,  -0.0824], device='cuda:0')
action = tensor([-0.2607, -0.0458])
obs = tensor([[22.9141, 32.9692, 45.4819]], device='cuda:0')
value = tensor([0.1285], device='cuda:0')
action_log_prob = tensor([-0.5134], device='cuda:0')
ACTION
tensor([-2.1918,  0.5812])
SYSTEM ACTUAL ACTION HERE
[-38.16]
NEXT STATE RIGHT HERE
[16.31 16.88]
HEHEHEHEHEHEHEHEHEH
tensor([-2.1918,  0.5812])
tensor([-25.9803,  -0.0824,  -0.4266], device='cuda:0')
tensor([16.3075, 16.8820], device='cuda:0')
action = tensor([-2.1918,  0.5812])
obs = tensor([[-25.9803,  -0.0824,  -0.4266]], device='cuda:0')
value = tensor([-0.9368], device='cuda:0')
action_log_prob = tensor([-3.7177], device='cuda:0')
ACTION
tensor([0.9917, 0.0216])
SYSTEM ACTUAL ACTION HERE
[6.51]
NEXT STATE RIGHT HERE
[62.83  3.13]
HEHEHEHEHEHEHEHEHEH
tensor([0.9917, 0.0216])
tensor([ 16.3075,  16.8820, -38.1576], device='cuda:0')
tensor([62.8327,  3.1337], device='cuda:0')
action = tensor([0.9917, 0.0216])
obs = tensor([[ 16.3075,  16.8820, -38.1576]], device='cuda:0')
value = tensor([-0.9109], device='cuda:0')
action_log_prob = tensor([-2.5915], device='cuda:0')
ACTION
tensor([0.5998, 0.1475])
SYSTEM ACTUAL ACTION HERE
[89.24]
NEXT STATE RIGHT HERE
[92.07 28.02]
HEHEHEHEHEHEHEHEHEH
tensor([0.5998, 0.1475])
tensor([62.8327,  3.1337,  6.5149], device='cuda:0')
tensor([92.0695, 28.0176], device='cuda:0')
action = tensor([0.5998, 0.1475])
obs = tensor([[62.8327,  3.1337,  6.5149]], device='cuda:0')
value = tensor([1.0034], device='cuda:0')
action_log_prob = tensor([-1.0267], device='cuda:0')
ACTION
tensor([-0.4826,  0.0496])
SYSTEM ACTUAL ACTION HERE
[106.5]
NEXT STATE RIGHT HERE
[-23.05  46.  ]
HEHEHEHEHEHEHEHEHEH
tensor([-0.4826,  0.0496])
tensor([92.0695, 28.0176, 89.2431], device='cuda:0')
tensor([-23.0510,  45.9959], device='cuda:0')
action = tensor([-0.4826,  0.0496])
obs = tensor([[92.0695, 28.0176, 89.2431]], device='cuda:0')
value = tensor([0.5026], device='cuda:0')
action_log_prob = tensor([-0.8680], device='cuda:0')
ACTION
tensor([-0.3761, -0.3190])
SYSTEM ACTUAL ACTION HERE
[-81.58]
NEXT STATE RIGHT HERE
[-70.48 -73.36]
HEHEHEHEHEHEHEHEHEH
tensor([-0.3761, -0.3190])
tensor([-23.0510,  45.9959, 106.5001], device='cuda:0')
tensor([-70.4843, -73.3558], device='cuda:0')
action = tensor([-0.3761, -0.3190])
obs = tensor([[-23.0510,  45.9959, 106.5001]], device='cuda:0')
value = tensor([0.4053], device='cuda:0')
action_log_prob = tensor([-0.8889], device='cuda:0')
ACTION
tensor([0.5733, 0.9795])
SYSTEM ACTUAL ACTION HERE
[-27.76]
NEXT STATE RIGHT HERE
[-132.67   62.14]
HEHEHEHEHEHEHEHEHEH
tensor([0.5733, 0.9795])
tensor([-70.4843, -73.3558, -81.5828], device='cuda:0')
tensor([-132.6737,   62.1444], device='cuda:0')
action = tensor([0.5733, 0.9795])
obs = tensor([[-70.4843, -73.3558, -81.5828]], device='cuda:0')
value = tensor([-0.0418], device='cuda:0')
action_log_prob = tensor([-2.5065], device='cuda:0')
tensor([[ 2.3122,  2.0520,  1.2777,  4.2769,  0.0237],
        [ 1.2703,  4.3949, -2.6833, -6.1061, -1.8060]], device='cuda:0') tensor([[ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[0.1733],
        [0.1763]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.1507],
        [0.1696]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.4091,  2.3446, -0.3548,  2.7012,  0.0286],
        [ 5.1568,  1.0860,  6.4657,  7.0658,  6.5487]], device='cuda:0') tensor([[62.8327,  3.1337,  6.5149, 92.0695, 28.0176],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-0.0525],
        [-0.0431]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.0503],
        [0.0995]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -4.7685,   3.1436, -10.2759,  -5.1438,  -9.9582],
        [ -2.2740,  -5.0042,   1.8369,   0.3720,   0.2940]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-0.3359],
        [-0.0749]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.1169],
        [-0.2547]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.0480,  2.2331, -0.7709,  2.6731,  0.4946],
        [ 3.3552,  1.5003,  3.3846,  5.7711,  2.2144]], device='cuda:0') tensor([[ 32.4398,   8.4436,  10.8243,  68.0816,  29.2907],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[-0.4199],
        [-0.3332]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.0149],
        [-0.3589]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.9464, -2.5804, -0.1919, -0.4808, -1.2294],
        [ 7.2475,  5.7439,  4.7176, -1.3303,  4.8956]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [  2.1446,   0.3748,  -7.8329,   2.8091,  -1.0363]], device='cuda:0')
POLICY_D = tensor([[0.1606],
        [0.0366]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.1725],
        [ 0.4692]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.0265,  4.9790,  2.2407, -4.9051,  2.6212],
        [ 1.0350,  0.5798,  0.9228,  2.1318,  2.0089]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[-0.6486],
        [-0.3733]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.8691],
        [0.1447]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -9.9924,  -0.0752, -14.6310,  -7.3128, -20.9357],
        [  2.8019,   1.8856,   2.1710,   5.0252,   0.6903]], device='cuda:0') tensor([[ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-1.5798],
        [ 1.3609]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.2807],
        [-0.6680]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.3286, -3.4662, -4.2527, -2.3067, -1.7687],
        [-5.4143, -2.5621, -5.3156, -2.5841, -2.3668]], device='cuda:0') tensor([[   1.4983,    9.4701,   -7.6056,    2.0400,   -0.1889],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[1.4961],
        [1.9115]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.6764],
        [0.8206]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -4.8717,   2.8568, -10.1308,  -4.3039,  -9.2343],
        [  0.6551,  -0.5131,   1.4958,  -0.4337,   3.1169]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[ 1.2121],
        [-2.0892]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.2427],
        [0.4863]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.5605,  4.2357,  2.3248, -3.9537,  2.1313],
        [-6.9156, -2.1037, -8.0002, -3.7583, -3.6188]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 68.0816,  29.2907,  39.0038,  34.7169,   5.4261]], device='cuda:0')
POLICY_D = tensor([[-0.4703],
        [-1.8094]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.8995],
        [0.5500]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.2529, -0.0710,  0.4458,  0.0436,  2.7267],
        [ 1.1658,  4.7226, -3.1766, -6.7408, -1.9559]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-2.9495],
        [-1.9988]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.6209],
        [1.5817]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -8.1118,  -0.5668,   0.0000,   1.6693,   5.1079],
        [ -8.7629, -13.9613,   1.5650,   7.3509,  -1.1100]], device='cuda:0') tensor([[ 9.2069e+01,  2.8018e+01,  8.9243e+01, -2.3051e+01,  4.5996e+01],
        [-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01]],
       device='cuda:0')
POLICY_D = tensor([[0.0291],
        [1.7788]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.2680],
        [-2.2170]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.5621,  1.9794,  3.1927,  5.6159,  2.0847],
        [ 2.0654,  3.1173, -0.1893,  0.0167, -1.2556]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [  2.8091,  -1.0363,   2.7685,   3.3377,   0.6261]], device='cuda:0')
POLICY_D = tensor([[-1.7455],
        [-2.2741]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.4593],
        [-0.0420]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[5.2700, 2.2802, 5.3951, 6.4591, 5.6253],
        [6.2723, 3.3268, 5.7863, 1.8379, 5.9819]], device='cuda:0') tensor([[62.8327,  3.1337,  6.5149, 92.0695, 28.0176],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-2.3591],
        [-1.7502]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.2941],
        [ 0.8175]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.0619, -2.3848, -0.5645, -0.8262, -1.9486],
        [ 3.4155,  4.6676,  0.0000,  3.0431,  2.3764]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[3.0058],
        [0.4650]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.0860],
        [1.8555]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.3107, -2.4096,  0.0000, -0.7734, -3.6393],
        [-2.6824, -2.4180, -1.4435, -1.1326, -4.3450]], device='cuda:0') tensor([[ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[2.2137],
        [1.9725]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.2518],
        [-0.7429]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.3875, -2.9551, -0.4529, -0.3053, -2.6069],
        [ 3.8533,  6.3222, -0.8778, -0.1804, -2.5089]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [  3.3377,   0.6261,   5.2086,   5.4266,   3.5033]], device='cuda:0')
POLICY_D = tensor([[ 0.1094],
        [-0.6150]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.7720],
        [ 0.8293]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.4750,  1.8792,  0.0000,  6.3446,  3.6251],
        [-1.3403, -3.1795,  1.3211,  0.6824,  1.8639]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-1.7684],
        [-2.8777]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.6038],
        [0.6726]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.8387,  6.4380, -1.0192,  0.5205, -2.6983],
        [-3.6692, -0.6382, -4.7400, -3.1227, -8.3472]], device='cuda:0') tensor([[  14.0294,    9.4856,   17.2324,   32.4398,    8.4436],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[-2.2211],
        [ 4.6849]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.6315],
        [-0.3776]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.4519,  2.3965,  4.0704,  5.2972,  3.8455],
        [ 0.2742,  4.4661, -4.2232, -6.7683, -0.8738]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862]], device='cuda:0')
POLICY_D = tensor([[-0.4898],
        [ 3.8792]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.2763],
        [4.7157]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.9897, -2.7127, -0.1185, -0.3279, -1.2642],
        [-1.0463,  1.4775, -3.0709,  1.4288, -1.3721]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-0.6668],
        [-2.6987]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.1098],
        [ 1.1882]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  5.9957,  16.8474,  -8.6282, -15.5986,  -5.0666],
        [  4.4612,   0.3051,   6.2508,   4.2572,   6.1648]], device='cuda:0') tensor([[ 34.7169,   5.4261,  69.8709,  22.9141,  32.9692],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[-0.6776],
        [-1.0321]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.0434],
        [0.7975]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 7.3628,  6.7373,  3.8583,  5.3107,  4.0955],
        [-1.4555,  1.2607, -3.4485,  0.9103, -3.0408]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-4.7602],
        [-2.0957]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.8160],
        [0.3763]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.4605,  0.4998,  7.5199,  5.7323,  7.4483],
        [-6.1906, -0.7754, -8.3093, -4.5499, -2.9310]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-1.2987],
        [-2.5086]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.9813],
        [4.0730]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.9763, -4.2596,  2.9759,  1.6013,  4.0531],
        [-2.0837, -3.9115,  0.9850,  0.5088, -0.2732]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748]], device='cuda:0')
POLICY_D = tensor([[6.0788],
        [4.0004]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.1386],
        [0.1180]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.8182,  3.8678, -5.2115, -5.4143, -2.5621],
        [-0.6369,  0.3172, -1.2662,  0.1466,  1.0635]], device='cuda:0') tensor([[ 2.2914e+01,  3.2969e+01,  4.5482e+01, -2.5980e+01, -8.2447e-02],
        [ 9.2069e+01,  2.8018e+01,  8.9243e+01, -2.3051e+01,  4.5996e+01]],
       device='cuda:0')
POLICY_D = tensor([[1.8324],
        [0.7698]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.4839],
        [3.3781]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.4182, -8.3571,  5.0984,  4.5494,  3.8843],
        [ 3.9849, -0.0293,  5.8962,  2.8460,  5.5635]], device='cuda:0') tensor([[  68.0816,   29.2907,   39.0038,   34.7169,    5.4261],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[-3.1439],
        [ 4.7157]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.6074],
        [ 0.5936]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.2454,  2.1484,  5.4954,  6.8407,  5.7060],
        [-3.6822, -1.4449, -3.9233, -2.8118, -7.3355]], device='cuda:0') tensor([[ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363],
        [ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889]], device='cuda:0')
POLICY_D = tensor([[-0.3942],
        [ 3.4368]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.1367],
        [-2.0140]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.8774, -3.5110, -5.0142, -2.7688, -0.8236],
        [ 4.2572,  6.1648, -0.1201, -0.8450, -0.9609]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862]], device='cuda:0')
POLICY_D = tensor([[-2.9613],
        [ 3.0430]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.1364],
        [0.8484]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 6.6129, 14.0018, -4.7717,  8.6663, -2.2228],
        [ 3.5732,  6.2562, -1.2217, -0.7871, -3.2903]], device='cuda:0') tensor([[  2.8091,  -1.0363,   2.7685,   3.3377,   0.6261],
        [-23.0510,  45.9959, 106.5001, -70.4843, -73.3558]], device='cuda:0')
POLICY_D = tensor([[-3.5266],
        [-1.6715]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.0326],
        [-0.6283]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.5504,  1.7833,  6.3227,  7.8330,  6.4495],
        [-3.7181, -0.2278, -5.2370, -2.9475, -8.8438]], device='cuda:0') tensor([[  2.1446,   0.3748,  -7.8329,   2.8091,  -1.0363],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-1.2263],
        [ 4.6993]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.0190],
        [-2.7476]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.5790,  0.2663,  6.4644,  4.2263,  6.4275],
        [ 4.0125, -0.0626,  5.9713,  2.7685,  5.6633]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-1.7426],
        [-2.2464]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.0146],
        [1.1011]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.7670, -2.2770,  1.2298, -0.2751,  2.8960],
        [ 0.6883,  2.6058, -1.6865,  1.1861,  0.4818]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-0.2542],
        [-0.2758]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.3006],
        [2.4177]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.3094,  0.2469, -8.0713, -3.7188, -5.1386],
        [-1.9346, -1.5053, -1.2882, -1.9051, -2.3882]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[ 3.2316],
        [-2.1577]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.4633],
        [-0.3649]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -3.3733,   1.5026,  -6.5222,  -0.8587, -10.9626],
        [  2.5828,  -0.1192,   3.9254,   1.5957,   2.9259]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-5.5387],
        [-2.0735]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-3.1671],
        [ 0.4813]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.5229, -3.3117,  1.1892,  0.6730,  1.3057],
        [-5.6704, -3.9231, -4.2825, -2.7604, -0.7204]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-1.4095],
        [ 2.6239]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.3836],
        [2.1576]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.7124,  3.0921, -4.2520, -1.9346, -1.5053],
        [ 5.9166,  2.4946,  6.1248,  6.2128,  6.2792]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [  1.4983,   9.4701,  -7.6056,   2.0400,  -0.1889]], device='cuda:0')
POLICY_D = tensor([[1.2488],
        [4.3877]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.8940],
        [1.7659]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.4398, -1.2460, -0.8285, -1.8520, -0.4486],
        [-1.7576, -2.5281,  0.0319, -0.4426, -0.4783]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[ 3.4142],
        [-3.5969]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.6128],
        [-0.1605]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.5644, -6.6486,  1.6411,  1.4335, -0.7482],
        [-3.1495, -8.1021,  3.7577,  4.1457,  1.7085]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 62.8327,   3.1337,   6.5149,  92.0695,  28.0176]], device='cuda:0')
POLICY_D = tensor([[-0.5491],
        [-4.0242]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-2.3966],
        [-2.4203]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.3072,  0.9589, -0.5412,  2.2311,  1.9238],
        [ 0.8829, -0.0340,  1.3349,  0.5756,  2.6364]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [   2.8091,   -1.0363,    2.7685,    3.3377,    0.6261]],
       device='cuda:0')
POLICY_D = tensor([[ 4.8437],
        [-2.6544]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.6097],
        [2.7471]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.4774,  2.2054,  0.0000, -5.5482, -9.1342],
        [ 2.0301,  0.6276,  2.3381,  3.1194,  1.6102]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[-2.0403],
        [-2.0440]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-2.0424],
        [ 0.5267]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-6.7112, -4.9600, -4.7403, -3.9774, -0.5410],
        [ 4.6511,  6.5910,  0.0000, 14.3316, 17.3855]], device='cuda:0') tensor([[ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363],
        [ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889]], device='cuda:0')
POLICY_D = tensor([[0.7324],
        [4.2811]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.4869],
        [5.2032]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.1596, -0.1436, -0.0863, -0.3848,  2.4253],
        [ 4.8448,  4.2584,  2.7198, -3.8890,  2.8706]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192]], device='cuda:0')
POLICY_D = tensor([[ 0.7526],
        [-4.6583]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.8852],
        [3.5622]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.4718,  8.6636, -3.8650,  3.3784, -6.6368],
        [-0.5965, -0.3757, -0.4888, -1.0380,  1.7485]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-1.7682],
        [-0.5956]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.8089],
        [ 3.3251]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.2036, -4.5012,  2.8915,  1.3954,  3.6011],
        [ 2.4598,  5.0354, -1.5959, -6.1393, -3.5595]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-1.6660],
        [ 0.7653]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.0873],
        [1.8500]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-7.9765, -5.4559, -6.0891, -4.6802, -6.7152],
        [ 2.2416,  4.5261,  0.0000,  2.9175,  1.6706]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [   2.0400,   -0.1889,   -7.6056,   -3.0788,    3.1862]],
       device='cuda:0')
POLICY_D = tensor([[4.1452],
        [2.8376]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.0964],
        [1.8309]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.9403,  0.3848,  2.4575,  2.4215,  1.8702],
        [-0.7589,  6.5386, -7.8911, -2.5356, -4.6157]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[ 2.3910],
        [-3.0851]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.1935],
        [ 1.6301]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -4.0780, -10.4416,   4.8147,  -0.7734,   3.6716],
        [ -1.4647,   4.1290,  -6.4337,  -6.7209,  -5.9821]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-3.8204],
        [-5.1065]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.1943],
        [ 1.0954]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.0773,  7.3010, -1.5621,  5.3201, -2.9187],
        [-3.5767, -7.1549,  2.1475,  2.5828, -0.1192]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [  3.3377,   0.6261,   5.2086,   5.4266,   3.5033]], device='cuda:0')
POLICY_D = tensor([[ 4.5891],
        [-1.6098]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.5073],
        [-2.4117]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.2494, -0.1390,  0.5111, -0.0899,  2.7793],
        [-4.4181, -7.6284,  1.3995,  3.0572,  0.5869]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [  5.4266,   3.5033,   4.2645,  25.2893,   1.8892]], device='cuda:0')
POLICY_D = tensor([[-0.7424],
        [-3.3897]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.7847],
        [-1.1916]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.0082,  1.6760, -0.2523,  3.4441,  1.0358],
        [ 2.6215,  1.7857,  2.0089,  4.9595,  0.5895]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [25.2893,  1.8892,  4.3585,  9.5115, -3.1192]], device='cuda:0')
POLICY_D = tensor([[-1.9789],
        [-5.9752]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.2253],
        [-0.8881]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.9964,  5.1686, -2.4160, -6.2204, -3.5695],
        [ 2.3877,  5.9494, -2.6489, -3.3138, -4.6854]], device='cuda:0') tensor([[ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[ 0.7239],
        [-1.5144]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.0497],
        [1.8392]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 10.3300,  28.8215, -14.6533, -17.4680, -17.4570],
        [  1.4774,   2.2054,   0.0000,  -5.5482,  -9.1342]], device='cuda:0') tensor([[62.8327,  3.1337,  6.5149, 92.0695, 28.0176],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-1.7614],
        [-0.3534]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.7680],
        [-1.3274]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.3888,  7.2833, -2.5572,  4.6027, -5.1038],
        [-2.5205, -8.1270,  4.7094,  4.4671,  3.3038]], device='cuda:0') tensor([[  5.4266,   3.5033,   4.2645,  25.2893,   1.8892],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-1.2798],
        [ 1.6193]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.4157],
        [0.8272]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.7758,  3.6753, -4.9496, -4.5827, -2.2322],
        [ 2.4822,  5.4056, -1.9464, -5.4524, -4.0095]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-0.3523],
        [-2.1454]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.8087],
        [2.7080]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[11.9692, 25.6571, -8.9621,  4.6910, -6.5395],
        [ 4.7441,  9.3604, -2.7140, -0.8190, -2.6357]], device='cuda:0') tensor([[  1.4983,   9.4701,  -7.6056,   2.0400,  -0.1889],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[ 4.3086],
        [-0.8575]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.6678],
        [2.7023]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.8503,  0.7662, -6.4615, -1.8990, -9.9665],
        [ 1.9906,  5.2702, -2.5297, -6.0438, -3.6801]], device='cuda:0') tensor([[  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[3.3830],
        [5.5943]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.1579],
        [ 2.3722]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.0955,  4.7286, -3.2862, -6.7806, -1.8520],
        [ 8.9033, -2.4417, 15.6353,  5.5601, 17.8569]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 34.7169,   5.4261,  69.8709,  22.9141,  32.9692]], device='cuda:0')
POLICY_D = tensor([[-1.6495],
        [-3.4056]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.3687],
        [0.9091]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.2643,  1.7001,  3.0438,  5.6533,  1.7607],
        [-0.6874,  0.4535, -1.4816,  0.3785,  0.8040]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[-3.0100],
        [ 2.3636]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-3.5141],
        [ 1.5424]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 7.8104,  0.2354, 11.2530,  6.6924, 11.1944],
        [-6.0448, -1.9364, -6.8917, -3.4651, -1.9960]], device='cuda:0') tensor([[  16.3075,   16.8820,  -38.1576,   62.8327,    3.1337],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[-3.3115],
        [ 3.5765]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.7125],
        [ 2.8635]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.4529,  1.4349,  6.5400,  7.8085,  6.6293],
        [ 1.7891,  4.7278, -2.2644, -6.4428, -2.8682]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[ 2.3941],
        [-4.5309]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.3996],
        [ 1.4939]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.0711,  2.2223, -0.7257,  2.7215,  0.4818],
        [-4.8852,  2.1029, -9.3697, -2.6769, -8.4293]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[ 1.9450],
        [-2.0267]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.3390],
        [-0.7033]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.7797, -3.5691,  1.0779,  0.6511,  0.5601],
        [ 5.1985,  1.2131,  6.3955,  7.3250,  6.4908]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192]], device='cuda:0')
POLICY_D = tensor([[-2.4291],
        [-7.1645]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.9739],
        [-0.7813]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.6271, -2.0954, -3.1683, -2.0563, -6.5201],
        [ 3.7745,  0.7896,  4.7381,  5.0946,  4.0849]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-2.3070],
        [-1.6879]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.6962],
        [-0.1872]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 6.5902, 13.8042, -4.6004,  8.1425, -2.0686],
        [ 2.9274, -0.0344,  4.3448,  2.0620,  3.3405]], device='cuda:0') tensor([[ 2.2914e+01,  3.2969e+01,  4.5482e+01, -2.5980e+01, -8.2447e-02],
        [-2.3051e+01,  4.5996e+01,  1.0650e+02, -7.0484e+01, -7.3356e+01]],
       device='cuda:0')
POLICY_D = tensor([[ 0.3035],
        [-0.4344]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.8286],
        [1.2233]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.5923, -0.7430,  1.6416, -0.7193,  3.3160],
        [ 1.6693,  5.1079, -2.8346, -6.4661, -3.1240]], device='cuda:0') tensor([[-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01],
        [-7.0484e+01, -7.3356e+01, -8.1583e+01, -1.3267e+02,  6.2144e+01]],
       device='cuda:0')
POLICY_D = tensor([[5.2598],
        [3.7597]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.6094],
        [3.0727]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.5442, -0.0441,  5.2627,  2.4832,  4.6031],
        [ 1.7107,  2.1962,  0.2429,  3.3853, -0.0630]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-2.0014],
        [-1.1746]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.3204],
        [0.5146]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.5137,  2.1288, -2.9616,  1.4339, -0.0971],
        [ 1.8656,  1.2705,  1.4299,  4.1554,  0.8823]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-1.0340],
        [-3.0179]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.3423],
        [-0.0917]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.0200,  2.9225, -3.0572, -0.6688,  0.1828],
        [-1.7045, -4.8216,  2.4862,  0.9082,  2.2000]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[-2.6924],
        [-0.4923]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.4211],
        [0.3256]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.5601,  2.2602,  5.8430,  6.7953,  6.0567],
        [ 1.7320,  2.9583, -0.5153,  0.5466, -0.8962]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862]], device='cuda:0')
POLICY_D = tensor([[-0.8551],
        [ 2.8536]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.4110],
        [1.1206]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.0186,  1.3774, -4.3982,  0.4348, -6.0667],
        [-5.1618, -2.6264, -4.8772, -2.3875, -2.9551]], device='cuda:0') tensor([[ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-1.1745],
        [-2.3301]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.8256],
        [ 0.8310]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-7.8128, -4.8655, -6.4598, -5.0938, -6.2463],
        [-1.7831, -3.4844,  0.9851,  0.5974,  0.4541]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [  3.3377,   0.6261,   5.2086,   5.4266,   3.5033]], device='cuda:0')
POLICY_D = tensor([[-1.3323],
        [-0.0141]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.0572],
        [ 0.0473]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.2305,  2.7885, -1.0775,  0.9143, -0.2159],
        [-4.7208, -2.4458, -4.4152, -2.2697, -4.3793]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[ 2.7987],
        [-2.4087]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.9819],
        [0.8495]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.2882,  4.1754,  1.9864, -3.8700,  1.4103],
        [ 0.2494, -0.1390,  0.5111, -0.0899,  2.7793]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [ 32.4398,   8.4436,  10.8243,  68.0816,  29.2907]], device='cuda:0')
POLICY_D = tensor([[-0.3670],
        [-1.0257]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.2768],
        [3.2268]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.1259,  2.2142,  2.3075,  4.6650,  0.8171],
        [-0.3651,  1.4383, -2.0275,  2.0867,  0.8141]], device='cuda:0') tensor([[ 14.0294,   9.4856,  17.2324,  32.4398,   8.4436],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-2.0033],
        [-0.7721]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.6132],
        [ 2.1834]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.6861, -3.2441, -3.5370, -1.7985, -3.6431],
        [ 0.4775, -1.1562,  1.9006, -0.9180,  3.6523]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 62.8327,   3.1337,   6.5149,  92.0695,  28.0176]], device='cuda:0')
POLICY_D = tensor([[-0.8250],
        [-3.9439]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.8780],
        [2.6778]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -2.0837,  -3.9115,   0.9850,   0.5088,  -0.2732],
        [ -3.4971,   4.3710,  -9.6762,  -8.4294, -14.6835]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889]], device='cuda:0')
POLICY_D = tensor([[-6.5593],
        [ 3.0782]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.0715],
        [-0.0827]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 8.3226,  4.9412,  7.1317, -3.3016,  7.3241],
        [-0.5699,  3.5271, -4.4929, -3.7963, -1.4056]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [  -3.0788,    3.1862,    3.1986,    2.1446,    0.3748]],
       device='cuda:0')
POLICY_D = tensor([[3.1308],
        [3.8275]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.7908],
        [3.8898]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.5491, -0.3440,  1.1647, -0.2491,  2.9896],
        [ 5.9972,  6.0467,  2.5635, -0.3637,  3.5354]], device='cuda:0') tensor([[ 68.0816,  29.2907,  39.0038,  34.7169,   5.4261],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-4.5763],
        [ 4.1623]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.1193],
        [1.1795]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.7686, -5.1481,  2.7300,  0.8970,  2.3178],
        [ 3.4721,  6.6407, -1.7689,  1.4562, -4.0618]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-3.4009],
        [-4.7838]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.6592],
        [-1.9008]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 6.1257,  5.7022,  3.1095, -2.2227,  3.9616],
        [ 1.9634,  5.1853, -2.4818, -6.2116, -3.5587]], device='cuda:0') tensor([[  1.4983,   9.4701,  -7.6056,   2.0400,  -0.1889],
        [-23.0510,  45.9959, 106.5001, -70.4843, -73.3558]], device='cuda:0')
POLICY_D = tensor([[ 2.0426],
        [-2.1929]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.4060],
        [1.3815]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.7704,  9.1534, -6.8769, -1.4230, -7.6508],
        [ 1.4544, -0.2564,  2.4064,  0.5096,  2.6049]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-4.5449],
        [-3.2924]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.7854],
        [ 0.6937]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -0.4011,  -0.7657,   0.2028,  -1.2964,   2.5128],
        [ -6.7882, -11.2273,   1.6392,  -3.8625,   4.3411]], device='cuda:0') tensor([[  2.1446,   0.3748,  -7.8329,   2.8091,  -1.0363],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[-1.5540],
        [-2.1034]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.0809],
        [1.4284]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.1870,  2.8132,  0.3048,  1.5887, -0.9145],
        [ 4.9421,  4.8168,  2.2845, -4.9682,  2.5653]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748]], device='cuda:0')
POLICY_D = tensor([[-1.5919],
        [ 3.9097]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.1561],
        [2.8968]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.2403,  0.9977, -8.7473, -2.9547, -6.0425],
        [ 5.2112,  1.1033,  6.5278,  7.1512,  6.6093]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [  34.7169,    5.4261,   69.8709,   22.9141,   32.9692]],
       device='cuda:0')
POLICY_D = tensor([[ 2.7685],
        [-1.5296]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.8361],
        [0.6854]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.4441,  1.0358,  3.9966,  5.3351,  3.0068],
        [-3.7442, -7.4799,  2.2376,  3.1443,  0.1763]], device='cuda:0') tensor([[-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01],
        [ 6.2833e+01,  3.1337e+00,  6.5149e+00,  9.2069e+01,  2.8018e+01]],
       device='cuda:0')
POLICY_D = tensor([[ 4.0126],
        [-4.9156]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.7809],
        [-1.5374]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 7.9625,  6.6250,  4.8572,  5.0442,  4.8383],
        [-7.5302, -1.9412, -9.0733, -4.2075, -7.2342]], device='cuda:0') tensor([[ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-7.3011],
        [-1.2358]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.8761],
        [0.5719]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.1523, -5.3535,  0.9060, -0.3202, -1.8316],
        [-0.0861,  5.7985, -6.1340, -5.5726, -2.1561]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862]], device='cuda:0')
POLICY_D = tensor([[7.4866e-04],
        [2.7388e+00]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.3020],
        [ 4.1576]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.4106,  5.9945, -1.1898, -2.4028, -3.4006],
        [ 5.3234,  4.6772,  2.9904, -4.6705,  3.5684]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-2.9286],
        [-3.5794]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.3460],
        [2.7039]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -8.9196, -15.5943,   3.0260,   2.3670,   0.3471],
        [  8.3014,  -8.0692,  20.5793,   9.7614,  22.1662]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-2.1666],
        [-1.8621]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.8747],
        [ 2.2312]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.7072, -4.7741,  2.4331,  0.9033,  2.1394],
        [ 4.6611,  1.1253,  5.6953,  6.6629,  5.6721]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[-1.2331],
        [-1.5607]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.1335],
        [1.0457]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.1519,  4.5475, -0.0715, -5.5220, -2.1323],
        [-3.6695, -6.6759,  1.5147,  1.4291, -0.7882]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[-3.1727],
        [ 4.0181]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.9670],
        [-0.2055]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.5386,  9.5272, -1.7174, -1.7432, -0.1639],
        [-6.0438, -3.6801, -5.0840, -2.9784, -0.6133]], device='cuda:0') tensor([[ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-7.8760],
        [-1.6367]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.2852],
        [3.5073]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.9026,  5.1104, -2.4937, -6.3455, -3.4143],
        [-3.1125, -1.1508,  0.0000, -4.4637, -2.3593]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[-2.2771],
        [-2.9364]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.5371],
        [2.6621]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[3.9005, 2.4479, 3.2055, 4.6072, 2.3626],
        [7.0122, 6.3732, 3.7193, 2.5283, 4.1573]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [   5.4266,    3.5033,    4.2645,   25.2893,    1.8892]],
       device='cuda:0')
POLICY_D = tensor([[ 3.9891],
        [-4.2971]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.1727],
        [2.2735]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.2525,  3.2243, -1.4967, -1.1140, -0.6581],
        [-1.3782, -5.3541,  3.5181,  1.3412,  3.8724]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862]], device='cuda:0')
POLICY_D = tensor([[-2.5852],
        [ 3.3778]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.7345],
        [2.2304]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -8.7812, -13.0204,   0.5632,   3.0031,  -2.3449],
        [  2.3085,   1.3218,   2.0287,   4.6371,   0.9013]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[ 2.4617],
        [-2.7189]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.0163],
        [-0.9530]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -1.6304,  -3.4301,   1.1536,   0.6842,   1.0072],
        [ -8.8428,  -3.0012,  -9.9074,  -4.7842, -15.0625]], device='cuda:0') tensor([[ 34.7169,   5.4261,  69.8709,  22.9141,  32.9692],
        [-23.0510,  45.9959, 106.5001, -70.4843, -73.3558]], device='cuda:0')
POLICY_D = tensor([[-1.2715],
        [-1.3262]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.3252],
        [-2.3002]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.2771, -2.7192, -3.4789, -1.7686, -5.1481],
        [-5.3286, -3.4662, -4.2527, -2.3067, -1.7687]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[ 0.3198],
        [-1.1280]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.0875],
        [2.5262]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -0.3442,   1.5437,  -2.1059,   2.1317,   0.7727],
        [ -7.3294, -13.6054,   3.3063,   6.9411,   4.6904]], device='cuda:0') tensor([[ 6.2833e+01,  3.1337e+00,  6.5149e+00,  9.2069e+01,  2.8018e+01],
        [-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01]],
       device='cuda:0')
POLICY_D = tensor([[-4.0312],
        [ 4.7082]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.5885],
        [1.7297]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 7.5654, 11.4383, -0.7138, -9.4926, -0.2650],
        [ 1.3989,  3.3784, -1.4409, -1.7851, -0.9883]], device='cuda:0') tensor([[ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824],
        [ 14.0294,   9.4856,  17.2324,  32.4398,   8.4436]], device='cuda:0')
POLICY_D = tensor([[-1.9419],
        [-2.2606]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.3178],
        [2.0484]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.8666, -3.7908, -4.7083, -2.8754, -0.6064],
        [12.1805, 21.1826, -4.0155,  9.6637, -2.4355]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[ 1.7272],
        [-0.7697]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.0396],
        [0.3156]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.3202, -1.8316,  1.4262, -0.7402,  3.5164],
        [-3.5891, -7.0903,  2.0624,  2.4342, -0.2113]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[ 3.0639],
        [-3.1553]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.4872],
        [-0.7462]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.1141,  3.5049, -5.2710, -4.0477, -3.5363],
        [-0.3123, -2.8678,  2.5113,  0.9885,  4.3567]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [  -3.0788,    3.1862,    3.1986,    2.1446,    0.3748]],
       device='cuda:0')
POLICY_D = tensor([[1.4211],
        [1.8726]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.6529],
        [1.2481]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -0.5483,   3.3236,  -4.2503,  -2.8534,  -1.1736],
        [  3.6687,  13.8216,  -8.9189,   5.3584, -12.4807]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[-7.5917],
        [-3.8832]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.3445],
        [-5.7458]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.6988,  2.1984,  3.1671,  5.2454,  2.1484],
        [ 4.5166,  8.7280, -2.3939,  3.9324, -2.8655]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-10.1710],
        [ -6.7939]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-3.7038],
        [-3.2547]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.3233,  1.9707,  1.3782,  4.4344,  0.1267],
        [-0.8747,  1.1208, -2.4486,  1.3345, -0.3854]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[ 1.0521],
        [-4.7105]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-2.9156],
        [ 0.2527]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -3.6802,   3.8958,  -9.4532,  -7.1420, -14.0150],
        [ -1.2550,  -4.5396,   2.8557,   1.3455,   3.4745]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 62.8327,   3.1337,   6.5149,  92.0695,  28.0176]], device='cuda:0')
POLICY_D = tensor([[-1.9864],
        [-5.7282]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.6101],
        [ 0.7286]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.6183,  4.5903, -2.3735, -6.3477, -2.5081],
        [ 2.9215,  1.6422,  2.5990,  5.3407,  1.1842]], device='cuda:0') tensor([[  9.5115,  -3.1192,  35.2687,  14.0294,   9.4856],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[-2.6502],
        [-2.1374]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 3.5005],
        [-0.5990]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.1263,  4.6790,  2.6985, -4.7685,  3.1436],
        [ 5.0135,  9.8193, -2.7930, -4.7260, -2.0670]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-1.1849],
        [-0.9956]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.7037],
        [3.6450]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.9388,  6.4415, -3.8195, -0.9312, -4.9495],
        [-2.7593, -6.7358,  2.9166,  2.1395,  0.8794]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[-1.9957],
        [ 0.8125]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.2791],
        [1.1650]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.4382,  0.0864,  4.9715,  2.7793,  4.2040],
        [ 0.6030, -0.3375,  1.2373, -0.2031,  2.9785]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-2.6097],
        [-2.3424]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.2184],
        [3.7159]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.3729, -0.8571, -5.5489, -3.5139, -7.0384],
        [-6.2641, -0.7180, -8.4769, -4.6167, -3.0254]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[-2.5532],
        [ 4.5030]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.1879],
        [5.3405]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.8668, -3.0591, -1.0507, -0.5462, -4.1004],
        [ 2.5283,  4.1573, -0.5852, -4.7208, -2.4458]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[-4.0111],
        [-3.5694]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.2503],
        [ 2.4698]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.7290,  3.4447, -4.6418, -3.5268, -1.8631],
        [-3.4397, -1.9650,  0.0000, -1.8128, -3.4368]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [   1.4983,    9.4701,   -7.6056,    2.0400,   -0.1889]],
       device='cuda:0')
POLICY_D = tensor([[2.0389],
        [2.4938]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.2929],
        [1.2336]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-6.7806, -1.8520, -8.0624, -3.9148, -3.2927],
        [-2.3923,  1.0128, -4.5708, -0.2424, -7.4626]], device='cuda:0') tensor([[  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[ 1.8368],
        [-2.8753]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 3.4116],
        [-0.8893]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -5.8664,  -2.2216,  -6.3339,  -3.1053,  -1.8735],
        [ -7.3632,   6.7333, -17.8144,  -7.1555, -14.1075]], device='cuda:0') tensor([[ 9.2069e+01,  2.8018e+01,  8.9243e+01, -2.3051e+01,  4.5996e+01],
        [-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01]],
       device='cuda:0')
POLICY_D = tensor([[-5.1568],
        [ 1.5643]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.8143],
        [1.6626]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.7361, -1.8508,  3.0010, -0.1896,  4.2381],
        [12.1805, 21.1826, -4.0155,  9.6637, -2.4355]], device='cuda:0') tensor([[  2.1446,   0.3748,  -7.8329,   2.8091,  -1.0363],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-3.0020],
        [-5.0669]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.2211],
        [-1.5393]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.1141,  1.7660,  0.0000, -2.7959, -7.4109],
        [-1.7884, -6.2124,  3.8036,  1.8273,  3.4061]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-9.9347],
        [-8.3126]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.7463],
        [-1.4868]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.6225, -5.0314, 13.4888,  8.0642, 12.2500],
        [-3.2022, -5.5800,  1.0673, -0.1716, -1.6339]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [  5.4266,   3.5033,   4.2645,  25.2893,   1.8892]], device='cuda:0')
POLICY_D = tensor([[-1.5356],
        [-6.0245]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-2.1000],
        [-0.7771]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.9897, -2.7127, -0.1185, -0.3279, -1.2642],
        [ 0.8181, -4.0520,  0.0000, -3.5967, -2.2039]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [25.2893,  1.8892,  4.3585,  9.5115, -3.1192]], device='cuda:0')
POLICY_D = tensor([[-3.8154],
        [-8.1713]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.3703],
        [-0.1821]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.6547,  1.1893,  4.1475,  5.7939,  3.3024],
        [-2.0606, -4.9422,  2.0869,  0.5700,  1.0073]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[ 0.3231],
        [-1.5404]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.4871],
        [2.2788]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -1.5675,  -0.1416,   0.0000, -14.7936, -25.5372],
        [ -3.0441,  -1.4270,   0.0000,   5.8424,  16.5462]], device='cuda:0') tensor([[  1.4983,   9.4701,  -7.6056,   2.0400,  -0.1889],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[4.5385],
        [0.3411]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.1847],
        [5.9859]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.8300,  5.7391,  0.0000,  1.8436,  0.0978],
        [ 0.4957,  4.4141, -3.8433, -6.5392, -0.8915]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748]], device='cuda:0')
POLICY_D = tensor([[-0.6778],
        [ 5.3164]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.0790],
        [6.7260]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  8.9821, -10.1209,  23.7070,  11.6515,  27.7925],
        [ -0.9857,   1.9862,  -3.5086,   1.2163,  -1.5813]], device='cuda:0') tensor([[ 2.2914e+01,  3.2969e+01,  4.5482e+01, -2.5980e+01, -8.2447e-02],
        [-2.3051e+01,  4.5996e+01,  1.0650e+02, -7.0484e+01, -7.3356e+01]],
       device='cuda:0')
POLICY_D = tensor([[-1.2679],
        [ 0.5139]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.0565],
        [2.5235]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.8026,  1.2587, -0.1226,  3.1078,  1.5543],
        [-0.8902, -2.0312,  0.7940, -0.7334,  2.3278]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[ 2.5048],
        [-1.3871]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.6474],
        [3.0430]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.0572,  0.7653, -0.7086,  1.6525,  1.9497],
        [ 0.3714,  2.7117, -2.2627,  0.5142,  0.5256]], device='cuda:0') tensor([[62.8327,  3.1337,  6.5149, 92.0695, 28.0176],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-8.1084],
        [-5.4155]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.1834],
        [1.5086]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -2.2227,   3.9616,  -7.3761,  -6.5578, -10.1681],
        [  0.7823,   1.0106,   0.1046,   2.7639,   1.7796]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [ 68.0816,  29.2907,  39.0038,  34.7169,   5.4261]], device='cuda:0')
POLICY_D = tensor([[ 1.7278],
        [-6.2664]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.5921],
        [-0.0765]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -2.0641,  -2.8321,  -0.1043,  -0.2251,  -1.4415],
        [ -0.7591,  -1.1733,   0.0000,  -6.0701, -13.0415]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-5.3303],
        [-6.6524]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.1025],
        [-3.0460]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -7.8432, -10.3383,  -0.8347,  -4.0825,  -0.7932],
        [  4.0656,   6.3425,   0.0000,   4.4695,  10.4363]], device='cuda:0') tensor([[  14.0294,    9.4856,   17.2324,   32.4398,    8.4436],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[-4.6136],
        [ 1.7203]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.8127],
        [3.7851]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.5254,  2.5608,  4.0084,  4.6993,  3.8453],
        [ 1.2447,  3.2169, -1.5005, -1.0826, -0.6413]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [ 34.7169,   5.4261,  69.8709,  22.9141,  32.9692]], device='cuda:0')
POLICY_D = tensor([[-3.2155],
        [-3.9912]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.0378],
        [2.5580]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.8232, -1.8403,  0.6948, -0.9771,  2.3615],
        [ 4.0835,  1.2337,  4.7327,  6.2712,  4.2817]], device='cuda:0') tensor([[ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824],
        [  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862]], device='cuda:0')
POLICY_D = tensor([[-1.5874],
        [ 2.6282]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 3.5875],
        [-0.2123]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -6.0605, -13.2400,   4.7956,   5.9131,   6.9610],
        [ -4.9584,   2.4681,  -9.8557,  -3.3720,  -8.4928]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-2.7198],
        [-4.3200]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.0884],
        [2.2879]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.9348,  6.3005, -5.1513, -2.4737, -3.0085],
        [-4.3954, -4.1494, -2.1713, -1.6552, -3.3122]], device='cuda:0') tensor([[ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-1.0796],
        [-2.9893]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.5872],
        [1.2671]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.0572,  0.7653, -0.7086,  1.6525,  1.9497],
        [ 1.9445,  0.4603,  2.3853,  2.6215,  1.7857]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[ 2.9830],
        [-1.8201]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.6274],
        [1.6241]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.3263,  1.1413,  6.6579,  7.3314,  6.7283],
        [ 1.4403,  2.3292, -0.2930,  2.7750,  0.0144]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [25.2893,  1.8892,  4.3585,  9.5115, -3.1192]], device='cuda:0')
POLICY_D = tensor([[-1.4920],
        [-7.9338]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.6850],
        [1.4706]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.2257,  0.5637,  1.2203,  2.2603,  1.9063],
        [-1.9709,  0.0601, -2.9634, -1.3593, -4.3268]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [  62.8327,    3.1337,    6.5149,   92.0695,   28.0176]],
       device='cuda:0')
POLICY_D = tensor([[ 1.1075],
        [-4.5621]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.5993],
        [1.5626]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.9059,  3.7962,  4.7606, -1.1962,  5.2218],
        [-1.9078, -6.3771,  3.7984,  2.0085,  3.1835]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[1.5962],
        [4.9574]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.9496],
        [2.4472]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  5.0442,   4.8383,   2.4125,  -4.9250,   2.7993],
        [ -3.8998,   5.5179, -11.4571,  -8.6962, -15.6895]], device='cuda:0') tensor([[-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01],
        [-2.3051e+01,  4.5996e+01,  1.0650e+02, -7.0484e+01, -7.3356e+01]],
       device='cuda:0')
POLICY_D = tensor([[ 1.6651],
        [-1.1193]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.1925],
        [0.2125]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.8516,  3.7698, -5.1591, -5.0313, -2.6109],
        [ 5.6576,  8.9853, -0.9808,  3.0867,  0.5735]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [ 14.0294,   9.4856,  17.2324,  32.4398,   8.4436]], device='cuda:0')
POLICY_D = tensor([[-2.8078],
        [-3.0536]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.7495],
        [1.2380]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.0177, -2.5012,  0.0000, -4.2496, -6.2000],
        [-1.8035, -6.2676,  3.8384,  1.9023,  3.4153]], device='cuda:0') tensor([[  34.7169,    5.4261,   69.8709,   22.9141,   32.9692],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[-4.3346],
        [-2.2578]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-2.2280],
        [-0.5454]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -7.7957, -12.4375,   1.4099,  -0.0233,   1.6014],
        [ -1.8116,  -4.1166,   1.5982,   0.7898,   1.0314]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-4.1888],
        [ 0.0900]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.4469],
        [-0.0741]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.2545e+01, -2.6691e+01,  9.1858e+00,  1.8573e+01,  1.1285e+01],
        [ 8.7341e-01, -1.9242e+00,  3.2792e+00, -8.1156e-03,  4.2953e+00]],
       device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-8.6681],
        [-3.6443]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.9885],
        [ 2.3151]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.6310,  4.6434, -3.8818, -6.9085, -1.1806],
        [ 1.0751, -0.9297,  2.5458, -0.5736,  3.3686]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889]], device='cuda:0')
POLICY_D = tensor([[-0.2192],
        [ 1.0158]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[5.0569],
        [3.3356]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.9312, -4.9495,  3.7569,  1.6767,  4.7884],
        [ 6.3217,  3.5686,  5.6086,  0.3756,  5.8397]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862]], device='cuda:0')
POLICY_D = tensor([[-5.7407],
        [ 1.0778]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.5793],
        [2.0124]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[13.2429,  4.2710, 15.0688,  0.3499, 12.6877],
        [ 2.2398,  7.2213, -4.1842,  3.2874, -6.1599]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 68.0816,  29.2907,  39.0038,  34.7169,   5.4261]], device='cuda:0')
POLICY_D = tensor([[-1.8880],
        [-4.9321]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.1367],
        [-3.7943]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[3.3389, 2.3567, 2.4733, 4.4263, 1.0811],
        [1.7234, 0.7518, 1.7579, 3.1374, 1.4803]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [ 32.4398,   8.4436,  10.8243,  68.0816,  29.2907]], device='cuda:0')
POLICY_D = tensor([[-2.3055],
        [-4.2312]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.6142],
        [ 0.1627]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.0233,  1.6014, -1.6934,  2.4466,  1.2178],
        [ 3.1235,  1.8938,  2.6358,  5.3270,  1.2243]], device='cuda:0') tensor([[  2.8091,  -1.0363,   2.7685,   3.3377,   0.6261],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-1.4739],
        [-1.0507]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.3990],
        [0.2708]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.5529,  1.6568, -0.9025,  3.0025,  1.3422],
        [ 7.2387,  4.0584,  6.4509, -1.8056,  6.3904]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[ 5.8323],
        [-1.4073]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.0140],
        [4.2961]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.7843, -2.9417, -5.4669, -2.6506, -1.3778],
        [ 6.3696,  3.9094,  5.3260, -1.5369,  5.6174]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-0.0614],
        [-4.3844]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.7902],
        [4.0799]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.8902, -2.0312,  0.7940, -0.7334,  2.3278],
        [-0.3894,  3.3043, -3.9965, -2.6551, -0.7393]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [   2.0400,   -0.1889,   -7.6056,   -3.0788,    3.1862]],
       device='cuda:0')
POLICY_D = tensor([[0.0467],
        [1.2405]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.8558],
        [3.7140]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.4130e-03, -1.6185e+00,  1.6732e+00, -8.5165e-01,  3.7698e+00],
        [-1.9338e+00, -2.8128e+00,  6.7609e-02, -1.6319e-01, -9.1361e-01]],
       device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [25.2893,  1.8892,  4.3585,  9.5115, -3.1192]], device='cuda:0')
POLICY_D = tensor([[-2.4635],
        [-8.6781]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.2787],
        [1.0009]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.6859, -8.6552,  2.0692,  3.1214,  1.9982],
        [-2.3886, -1.8569, -1.5924, -1.7310, -3.9493]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [  9.5115,  -3.1192,  35.2687,  14.0294,   9.4856]], device='cuda:0')
POLICY_D = tensor([[-2.3629],
        [-2.6375]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.8402],
        [-0.1057]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.0130, -1.0638, -6.2771, -3.7635, -4.8733],
        [-6.7806, -1.8520, -8.0624, -3.9148, -3.2927]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-0.1738],
        [-3.2298]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.5451],
        [2.6019]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.2296, -3.9912, -0.6192, -0.5371, -3.7241],
        [-0.9487,  0.4935, -1.9077,  0.2349, -0.1025]], device='cuda:0') tensor([[ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824],
        [ 32.4398,   8.4436,  10.8243,  68.0816,  29.2907]], device='cuda:0')
POLICY_D = tensor([[-3.2062],
        [-3.4245]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.1382],
        [1.5878]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-7.7838, -3.8027, -7.5182, -4.5863, -7.1368],
        [-4.5328, -2.3315, -4.2568, -2.2740, -5.0042]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[ 4.0395],
        [-2.5298]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.2527],
        [1.2480]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.2472, -6.5962,  3.5257,  2.1816,  2.2896],
        [ 2.5094,  2.9780,  0.0000, -2.8702, -8.9826]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [ 34.7169,   5.4261,  69.8709,  22.9141,  32.9692]], device='cuda:0')
POLICY_D = tensor([[ 1.0839],
        [-3.5693]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.7802],
        [-1.9435]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 8.3014, -8.0692, 20.5793,  9.7614, 22.1662],
        [ 5.3343,  1.7078,  6.0828,  7.6849,  6.2341]], device='cuda:0') tensor([[62.8327,  3.1337,  6.5149, 92.0695, 28.0176],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[-8.3296],
        [-1.7003]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.9822],
        [-0.9934]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.7910, -3.9756,  1.4823,  0.7889,  0.9578],
        [ 2.8929,  5.9466, -1.9023, -2.9975, -4.3644]], device='cuda:0') tensor([[ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-2.7829],
        [-5.7647]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.2718],
        [1.2615]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.6659, -2.9611,  2.0875,  0.8906,  3.7331],
        [-2.6797, -7.0178,  3.3259,  2.7883,  1.4590]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[ 0.2630],
        [-2.9146]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.5005],
        [2.2378]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.7064,  2.0536,  6.2723,  7.5233,  6.4066],
        [ 5.2624,  5.7086,  1.8322, -2.7090,  2.5097]], device='cuda:0') tensor([[ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[ 4.3514],
        [-2.1161]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.2476],
        [3.1379]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.4621,  1.4219,  6.5671,  7.8094,  6.6519],
        [-2.1965, -3.2381,  0.1214,  0.0927, -1.5120]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-3.4967],
        [-6.8545]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.1425],
        [1.5963]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.5388, -0.5838,  1.3980, -0.5924,  3.1872],
        [ 1.5285,  0.4690,  1.7640,  2.2907,  1.8425]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889]], device='cuda:0')
POLICY_D = tensor([[1.7185],
        [0.3269]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.7763],
        [1.4310]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.8007, -7.5970,  3.7479,  3.8070,  1.8620],
        [ 4.6583,  4.7510,  1.9350, -5.0681,  1.8615]], device='cuda:0') tensor([[-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01],
        [-2.3051e+01,  4.5996e+01,  1.0650e+02, -7.0484e+01, -7.3356e+01]],
       device='cuda:0')
POLICY_D = tensor([[ 0.2570],
        [-3.6898]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.0447],
        [2.4831]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.2733,  2.9672, -3.4764, -1.0590, -0.2234],
        [ 0.7963, -1.0219,  2.2309, -0.7513,  3.5221]], device='cuda:0') tensor([[ 68.0816,  29.2907,  39.0038,  34.7169,   5.4261],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[-4.7172],
        [-3.4319]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.5478],
        [2.9147]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 6.1257,  5.7022,  3.1095, -2.2227,  3.9616],
        [ 3.6961,  4.8527,  0.4133, -5.5862, -1.1723]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [  2.1446,   0.3748,  -7.8329,   2.8091,  -1.0363]], device='cuda:0')
POLICY_D = tensor([[-5.4494],
        [-4.2534]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.2608],
        [1.4848]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.6259,  1.8476,  0.0000,  2.8857,  0.4615],
        [-1.1117, -3.0623,  1.5361,  0.7133,  2.5509]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-7.5529],
        [-4.1535]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-2.4089],
        [ 2.3671]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -7.4173, -21.5448,  11.4021,  10.0727,  11.7499],
        [  3.8197,   8.8856,  -3.5829,   2.2638,  -5.7724]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [   3.3377,    0.6261,    5.2086,    5.4266,    3.5033]],
       device='cuda:0')
POLICY_D = tensor([[1.0243],
        [0.1054]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.8780],
        [-2.7530]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.1011, -8.1734,  5.3748,  4.6926,  4.6126],
        [ 3.4220,  2.6353,  2.3069,  3.4195,  0.9156]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-2.1921],
        [-1.2374]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.5662],
        [1.5252]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.7677,  1.5553,  2.4628,  5.2005,  1.0618],
        [ 8.8197, -2.4976, 15.5701,  5.7100, 17.6544]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [25.2893,  1.8892,  4.3585,  9.5115, -3.1192]], device='cuda:0')
POLICY_D = tensor([[-0.8304],
        [-6.9897]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.5724],
        [4.8731]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.4032, -2.6689, -5.1885, -2.5099, -2.2994],
        [ 0.7257,  2.8876, -1.9233,  0.0750,  0.2154]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[-0.8846],
        [ 4.8440]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.4423],
        [3.4554]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  5.9434,  11.2812,  -2.9387, -10.7058,  -0.7243],
        [ -3.1400,   4.8612,   0.0000,  -6.0692, -10.0385]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[-2.5088],
        [-2.1331]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.6654],
        [2.3658]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  1.7704,   9.1534,  -6.8769,  -1.4230,  -7.6508],
        [ -4.9250,   2.7993, -10.1497,  -4.1793,  -8.9549]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [   1.4983,    9.4701,   -7.6056,    2.0400,   -0.1889]],
       device='cuda:0')
POLICY_D = tensor([[-1.4574],
        [-0.3344]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.8260],
        [ 0.9773]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.6742,  0.3062,  6.5631,  4.4337,  6.5540],
        [-2.3041, -1.0168, -2.3383, -2.3730, -4.6127]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-2.9636],
        [-4.3512]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.8039],
        [0.8303]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.2231,  1.3081,  3.3893,  5.5186,  2.1778],
        [ 5.6401, 11.8971, -4.0232, -8.1278, -1.8992]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [  3.3377,   0.6261,   5.2086,   5.4266,   3.5033]], device='cuda:0')
POLICY_D = tensor([[-2.6823],
        [-0.3145]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.3223],
        [ 4.0923]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.7181, -0.2278, -5.2370, -2.9475, -8.8438],
        [ 3.4220,  2.6353,  2.3069,  3.4195,  0.9156]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-2.2665],
        [-3.0960]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.1093],
        [1.3860]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -7.3128, -20.9357,  10.9249,  13.9863,  11.4001],
        [  5.1568,   1.0860,   6.4657,   7.0658,   6.5487]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [25.2893,  1.8892,  4.3585,  9.5115, -3.1192]], device='cuda:0')
POLICY_D = tensor([[ 2.8934],
        [-7.0808]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.8485],
        [1.4939]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.0954, -0.0225,  0.1637,  0.0253,  2.5993],
        [-0.5632,  4.0377,  0.0000, -3.5907, -4.8624]], device='cuda:0') tensor([[  5.4266,   3.5033,   4.2645,  25.2893,   1.8892],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-4.9117],
        [ 0.6679]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.4838],
        [4.4298]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.7398, -4.0811, -2.7489, -1.9601, -2.6435],
        [-0.9196, -5.1181,  3.9486,  1.7088,  4.9670]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [ 62.8327,   3.1337,   6.5149,  92.0695,  28.0176]], device='cuda:0')
POLICY_D = tensor([[-2.9096],
        [-7.3157]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.3054],
        [2.4970]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.8333, -3.6872, -3.2947, -1.9338, -2.8128],
        [ 1.4091,  2.3446, -0.3548,  2.7012,  0.0286]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-2.6025],
        [-3.4231]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.4772],
        [0.9472]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.0331,  2.1116,  0.8052,  3.8868, -0.0919],
        [ 2.0194,  5.0253, -2.2336, -6.3664, -3.4250]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[ 1.1900],
        [-6.3089]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.6039],
        [5.3838]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.6123,  6.2964, -1.2058, -0.5165, -3.2271],
        [-0.8515, -4.4533,  3.3602,  1.7385,  4.5543]], device='cuda:0') tensor([[   2.0400,   -0.1889,   -7.6056,   -3.0788,    3.1862],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[ 1.6592],
        [-0.6672]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.8191],
        [2.9147]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.6052, 10.7469,  0.0000,  2.0482,  9.4282],
        [-0.2110,  1.4735,  0.0000,  0.7823,  1.0106]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[-5.0191],
        [ 3.5819]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[5.3919],
        [2.8653]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-13.1492,   3.1464, -22.6152, -11.3114, -14.3819],
        [ -5.7966,  -1.9177,  -6.5458,  -3.3594,  -2.1979]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[-4.1744],
        [-3.9685]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.7226],
        [2.1521]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.8335,  4.9870, -2.4676, -6.4815, -3.2024],
        [ 2.4132,  1.2228,  2.2854,  4.6347,  1.0921]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-5.4792],
        [-5.1484]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.8655],
        [-1.9254]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-14.1339, -13.8146,  -6.4932,   4.2848,  -6.4735],
        [  2.4091,   1.5998,   1.8888,   4.8449,   0.6283]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192]], device='cuda:0')
POLICY_D = tensor([[-3.3416],
        [-7.6786]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.2280],
        [-0.9975]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.2691,  2.2888, -0.5030,  2.7322,  0.2212],
        [ 7.8131,  6.4110,  4.8590,  3.4057,  4.8671]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[ 0.6379],
        [-0.9505]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.2994],
        [3.8886]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[1.8596, 0.4434, 2.2780, 2.5061, 1.7992],
        [7.8094, 6.6519, 4.6041, 5.1056, 4.6156]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[-1.4486],
        [-2.1465]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.6283],
        [3.9544]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.8920, -0.4759, -2.2920, -1.9656, -3.3424],
        [-2.0939, -2.1235, -0.8823, -1.2197, -2.3890]], device='cuda:0') tensor([[  9.5115,  -3.1192,  35.2687,  14.0294,   9.4856],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[-3.4153],
        [-2.5259]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.2959],
        [1.8443]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  3.4250,  -0.1172,   5.1630,   2.1959,   4.4350],
        [ -8.5810, -14.7668,   2.6672,   7.0146,   0.6077]], device='cuda:0') tensor([[ 68.0816,  29.2907,  39.0038,  34.7169,   5.4261],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-1.8883],
        [-3.6191]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.5309],
        [0.5250]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[4.5133, 0.2330, 6.4022, 4.0656, 6.3425],
        [3.0431, 1.5484, 2.8754, 5.4716, 1.5165]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [  2.1446,   0.3748,  -7.8329,   2.8091,  -1.0363]], device='cuda:0')
POLICY_D = tensor([[-3.3885],
        [-1.8447]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.9522],
        [0.5184]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.0529, -0.1074, -1.4386, -0.9532,  0.0464],
        [-1.7569, -4.4718,  2.0466,  0.8532,  1.6283]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-1.6446],
        [-1.6422]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.7744],
        [4.4048]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.0711,  2.0348, -2.0034,  2.1597,  0.9623],
        [-1.9051, -2.3882, -0.3301, -0.7326, -1.2670]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [  3.3377,   0.6261,   5.2086,   5.4266,   3.5033]], device='cuda:0')
POLICY_D = tensor([[-1.0627],
        [ 1.3904]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.8314],
        [3.9996]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.9422,  6.1745,  0.8783, -0.3013,  1.2365],
        [-1.5229, -3.3117,  1.1892,  0.6730,  1.3057]], device='cuda:0') tensor([[-7.0484e+01, -7.3356e+01, -8.1583e+01, -1.3267e+02,  6.2144e+01],
        [ 2.2914e+01,  3.2969e+01,  4.5482e+01, -2.5980e+01, -8.2447e-02]],
       device='cuda:0')
POLICY_D = tensor([[-0.3978],
        [-4.1987]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.2492],
        [3.1887]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[10.5610, 10.3010,  4.8739, -5.4699,  4.9603],
        [ 4.5938,  3.4376,  3.2007,  0.0346,  3.0750]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [25.2893,  1.8892,  4.3585,  9.5115, -3.1192]], device='cuda:0')
POLICY_D = tensor([[-1.3895],
        [-8.7113]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.0744],
        [1.3734]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-17.7173, -30.4272,   5.4428, -11.5982,   7.0359],
        [  0.4237,  -0.3460,   0.9821,  -0.3341,   2.9891]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-3.0638],
        [-8.0738]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.3767],
        [2.4109]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.0451, -2.4163, -0.5071, -0.7713, -1.8400],
        [ 3.4962,  1.5323,  3.5590,  5.9166,  2.4946]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[-5.4381],
        [ 3.0189]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.1871],
        [-1.2939]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.6279,  1.1572,  2.6694,  4.7552,  1.3845],
        [-5.9817, -2.4324, -6.2852, -3.0048, -1.6226]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-4.0533],
        [-3.8455]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.1724],
        [ 3.1612]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.2495,  1.5089,  3.2200,  5.6691,  1.9749],
        [-3.9190, -2.4111, -3.2709, -1.8454, -6.0197]], device='cuda:0') tensor([[  5.4266,   3.5033,   4.2645,  25.2893,   1.8892],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-4.9505],
        [-0.9942]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.4380],
        [0.6476]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -1.5195,  -4.4001,   2.3218,   1.0848,   2.4326],
        [ -1.9610,   5.4174,  -8.4990,  -7.8432, -10.3383]], device='cuda:0') tensor([[  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[ 1.9116],
        [-1.9537]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.4980],
        [4.0428]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 6.0732,  3.2235,  5.6002,  2.3393,  5.8636],
        [-4.0653, -2.4269, -3.4699, -1.9120, -5.8366]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-0.8361],
        [-0.9491]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.3744],
        [1.6912]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -9.2359,  -0.7604, -12.8075,  -6.2734, -19.6122],
        [  3.1943,   1.8180,   2.8186,   5.4890,   1.4631]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [ 34.7169,   5.4261,  69.8709,  22.9141,  32.9692]], device='cuda:0')
POLICY_D = tensor([[-3.0889],
        [-2.7871]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.8168],
        [ 0.5645]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.9141,  2.6001,  0.1239,  2.2672, -0.6143],
        [ 1.6013,  4.0531, -1.8418, -4.8151, -1.9246]], device='cuda:0') tensor([[  2.1446,   0.3748,  -7.8329,   2.8091,  -1.0363],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[-2.8005],
        [-3.4582]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.3221],
        [5.0778]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.7612, -8.3928,  4.6306,  4.3638,  2.9756],
        [-1.8075, -0.1645, -2.4902, -1.5671, -3.2787]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[ 0.3521],
        [-2.9559]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.5855],
        [4.2197]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.1043, -2.2728, -0.7429, -1.0109, -2.2603],
        [ 2.4472, -0.5606,  4.1830,  0.5861,  3.3099]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[-2.8952],
        [ 0.6223]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.8374],
        [3.2836]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.1031,  2.0838,  0.9370,  4.0125, -0.0626],
        [ 4.3312,  2.1745,  4.1228,  5.9059,  3.7962]], device='cuda:0') tensor([[ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-8.9205],
        [-1.5100]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.3405],
        [ 0.0813]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.3041, -1.0168, -2.3383, -2.3730, -4.6127],
        [-0.4179,  3.1622, -3.8911, -2.0275, -0.6928]], device='cuda:0') tensor([[ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824],
        [  5.4266,   3.5033,   4.2645,  25.2893,   1.8892]], device='cuda:0')
POLICY_D = tensor([[-4.3492],
        [-5.3858]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.4079],
        [3.7900]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  4.5632,   7.1773,  -0.7186,   5.2770,  -1.0177],
        [ -6.8297, -15.0108,   5.4978,   7.0591,   7.3450]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-0.5482],
        [-5.9509]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.1785],
        [3.8376]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.0245,  2.4759, -1.0569,  1.9383,  0.2973],
        [ 4.4700,  0.1451,  6.4296,  3.7482,  6.3572]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [ -23.0510,   45.9959,  106.5001,  -70.4843,  -73.3558]],
       device='cuda:0')
POLICY_D = tensor([[-0.4658],
        [-2.3647]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.4100],
        [2.3491]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.8700,  1.4103,  0.0000, -2.9099,  0.0319],
        [ 1.8436,  0.0978,  2.6124,  1.6002,  2.1806]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[1.7940],
        [4.5573]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[7.3760],
        [3.0317]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.0938, -6.2463, -1.0269, -0.5833,  0.2705],
        [ 0.8532,  1.6283, -0.4310,  3.3061,  1.2001]], device='cuda:0') tensor([[62.8327,  3.1337,  6.5149, 92.0695, 28.0176],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-5.9330],
        [-3.4936]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.8406],
        [0.8172]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.4748,  0.2185, -2.3972, -0.7129, -2.0815],
        [ 3.3552,  1.5003,  3.3846,  5.7711,  2.2144]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748]], device='cuda:0')
POLICY_D = tensor([[-5.0285],
        [ 2.5338]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.2504],
        [-1.0012]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.1219,  2.9158, -3.2001, -0.7206,  0.0653],
        [-4.7477, -6.9944,  0.2575,  1.5545,  0.3680]], device='cuda:0') tensor([[  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-0.7694],
        [-4.4015]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.3052],
        [1.1922]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-12.1378, -11.1412,  -6.3246,  -9.2028,  -1.0640],
        [  2.5152,   1.1800,   2.4799,   4.6784,   1.2344]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-4.7353],
        [-6.5339]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.9093],
        [-1.5691]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.1137,  2.5330, -4.2635, -0.1376, -2.6349],
        [ 3.0947,  0.8112,  3.7150,  4.5254,  2.5608]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-4.7987],
        [-4.4634]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.6852],
        [0.1668]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.8700,  1.4103,  0.0000, -2.9099,  0.0319],
        [-1.4070,  2.5375, -4.7000, -0.4091, -4.0742]], device='cuda:0') tensor([[  2.8091,  -1.0363,   2.7685,   3.3377,   0.6261],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[ 0.7973],
        [-3.0287]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[7.2798],
        [2.9863]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.4418,  1.7484, -1.1609,  2.8494,  1.2944],
        [-3.1227, -8.3472,  4.0511,  4.1873,  2.0768]], device='cuda:0') tensor([[   3.3377,    0.6261,    5.2086,    5.4266,    3.5033],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[ 1.2100],
        [-0.8026]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.5426],
        [3.1800]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -2.0950,  10.3540, -13.8105, -12.6362, -16.8815],
        [-17.7071, -10.2785, -15.4163, -13.0339, -11.7679]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889]], device='cuda:0')
POLICY_D = tensor([[-7.3739],
        [-0.8342]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.7750],
        [1.7195]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.3072,  0.9589, -0.5412,  2.2311,  1.9238],
        [-4.7271, -3.1639, -3.6805, -1.8462, -3.6205]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-7.2631],
        [-5.2547]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.9079],
        [1.6153]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.4173,  0.1469,  6.3501,  3.7135,  6.2547],
        [-2.6860, -1.3428, -2.5626, -2.4085, -5.7122]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[-5.8408],
        [-3.9833]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.1732],
        [0.8253]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.6329, -1.3265,  0.4426, -1.4074,  2.4461],
        [-6.9156, -2.1037, -8.0002, -3.7583, -3.6188]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[-1.1661],
        [-0.5904]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.9801],
        [5.1374]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.1365, -0.1960, -1.4699, -1.1474, -0.1996],
        [ 0.4751, -0.6204,  1.3420, -0.6710,  3.2160]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[ 3.0402],
        [-4.1837]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.0254],
        [4.3716]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.1873,  2.0768,  4.0120,  6.0166,  3.5480],
        [ 2.2882, -0.5578,  3.9461,  0.4946,  3.1464]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [ 14.0294,   9.4856,  17.2324,  32.4398,   8.4436]], device='cuda:0')
POLICY_D = tensor([[-5.8216],
        [-5.1611]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.7729],
        [ 1.5082]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.8146,  3.4739,  0.5441, -1.3398, -1.3131],
        [-1.9427, -6.4228,  3.7943,  2.0637,  3.1163]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[-7.8097],
        [-3.2478]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.1705],
        [3.3260]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.2740, -5.0042,  1.8369,  0.3720,  0.2940],
        [ 1.8680,  2.1989,  0.4716,  3.5261, -0.1480]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-3.4914],
        [-5.0800]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.7931],
        [0.5052]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.6612, -0.4842, -1.9436, -1.8295, -2.2332],
        [ 1.6569,  5.4857,  0.0000, -2.1708, -6.1178]], device='cuda:0') tensor([[   2.0400,   -0.1889,   -7.6056,   -3.0788,    3.1862],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[ 2.1863],
        [-1.5101]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.4677],
        [2.5671]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.2990, -6.5498,  3.4014,  2.0563,  2.0623],
        [ 1.6002,  2.1806,  0.0964,  3.3193,  0.0304]], device='cuda:0') tensor([[ 34.7169,   5.4261,  69.8709,  22.9141,  32.9692],
        [-23.0510,  45.9959, 106.5001, -70.4843, -73.3558]], device='cuda:0')
POLICY_D = tensor([[-2.6948],
        [-3.8587]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.0807],
        [1.4889]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.9858, -2.9243,  4.4806,  1.9634,  5.1853],
        [ 1.9783,  2.1315,  0.7039,  3.7906, -0.1061]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-2.6732],
        [-3.7620]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.8804],
        [1.4013]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  2.9311,   1.9306,   2.3144,   5.0864,   0.8308],
        [-12.2183, -10.7317,  -6.8673,  -9.1491,  -1.2965]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [  2.8091,  -1.0363,   2.7685,   3.3377,   0.6261]], device='cuda:0')
POLICY_D = tensor([[-2.0103],
        [ 1.0428]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.2025],
        [0.2640]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.1060, -6.8077,  2.4808,  2.0819,  0.1312],
        [-3.9540, -3.7561, -1.9289, -1.1758, -4.3622]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-3.9552],
        [-1.9554]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.1919],
        [1.7543]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.2124, -1.6844,  0.0000, -2.0641, -2.8321],
        [-2.2454, -5.3860,  2.2747,  0.5477,  0.8530]], device='cuda:0') tensor([[ 34.7169,   5.4261,  69.8709,  22.9141,  32.9692],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-3.6066],
        [-4.2875]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.0691],
        [3.8502]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.5652, -2.2200, -4.4201, -2.4081, -5.0399],
        [ 3.8004, -0.0176,  5.6124,  2.7458,  5.1416]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[ 0.3155],
        [-3.4878]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.3261],
        [2.1404]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[7.3314, 6.7283, 3.8212, 5.2248, 4.0790],
        [1.9443, 1.4024, 1.4091, 4.3397, 0.7237]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-2.0806],
        [-7.7375]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 2.4860],
        [-0.9115]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.8230, -4.8076,  0.0000, -4.1042, -3.9902],
        [-0.4106,  1.0330, -1.6746,  1.6653,  1.0426]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [  92.0695,   28.0176,   89.2431,  -23.0510,   45.9959]],
       device='cuda:0')
POLICY_D = tensor([[-3.8231],
        [-3.4675]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.2042],
        [1.2417]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.1195,  5.9017, -2.9942, -3.7239, -4.5150],
        [ 2.0482,  9.4282, -6.7527, -3.4026, -8.5137]], device='cuda:0') tensor([[ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[ 4.0001],
        [-3.8893]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.7575],
        [1.5588]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -2.3905,   3.7048,  -7.3570,  -5.6832, -10.7350],
        [  0.8370,  -0.5355,   1.7869,  -0.3524,   3.0912]], device='cuda:0') tensor([[ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-4.3242],
        [-5.3653]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.6704],
        [3.8723]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.8823,  2.1649,  0.0000, -3.5044,  4.2760],
        [ 1.7114,  3.3191,  0.0000, -4.3123, -0.4331]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862]], device='cuda:0')
POLICY_D = tensor([[-2.4232],
        [ 0.2903]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.4341],
        [5.3277]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.5885,  2.8746, -2.1117,  0.0219,  0.3207],
        [ 9.1548, 13.1302, -0.1270,  6.0039, -1.2885]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [25.2893,  1.8892,  4.3585,  9.5115, -3.1192]], device='cuda:0')
POLICY_D = tensor([[-3.1839],
        [-9.4093]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 0.7674],
        [-0.7340]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-7.2787, -6.7715, -3.6991, -0.5804, -1.2800],
        [ 5.4298,  4.0082,  3.8402, -2.5472,  4.3577]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [  5.4266,   3.5033,   4.2645,  25.2893,   1.8892]], device='cuda:0')
POLICY_D = tensor([[-5.1127],
        [-7.1903]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.0117],
        [2.5361]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[2.6071, 0.0567, 3.7789, 2.0697, 2.7371],
        [3.5621, 1.9794, 3.1927, 5.6159, 2.0847]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-3.6118],
        [-2.9164]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.0986],
        [0.0808]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.8177e+00, -3.1520e-03,  4.1509e+00,  2.0654e+00,  3.1173e+00],
        [-3.2296e+00, -3.9912e+00, -6.1918e-01, -5.3714e-01, -3.7241e+00]],
       device='cuda:0') tensor([[ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824],
        [  9.5115,  -3.1192,  35.2687,  14.0294,   9.4856]], device='cuda:0')
POLICY_D = tensor([[-2.1981],
        [-2.5331]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.7615],
        [3.4826]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.4064, -5.7878,  2.4540,  0.7538,  0.7805],
        [ 4.0479,  6.4134, -0.6858,  0.5296, -1.9680]], device='cuda:0') tensor([[  1.4983,   9.4701,  -7.6056,   2.0400,  -0.1889],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[ 0.6857],
        [-2.1560]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.9853],
        [3.2529]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 6.4326,  6.7481,  2.4777,  4.5938,  3.4376],
        [ 7.5999, 15.1086, -4.4653,  4.5114, -3.8428]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[ 4.8400],
        [-2.8303]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 4.6569],
        [-0.3021]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.5923,  8.8002, -6.7731,  0.8813, -6.8571],
        [-0.5965, -0.3757, -0.4888, -1.0380,  1.7485]], device='cuda:0') tensor([[62.8327,  3.1337,  6.5149, 92.0695, 28.0176],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-6.7456],
        [-4.6371]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.8892],
        [ 4.1483]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  2.1674,   0.7331,   2.4310,   3.4962,   1.5323],
        [ -5.0673, -10.4159,   3.3317,  -1.6596,   4.1762]], device='cuda:0') tensor([[  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[ 0.5369],
        [-2.0119]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.3424],
        [5.1951]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.0027, -5.0638,  2.2981,  0.6491,  1.3625],
        [ 2.9464,  1.7001,  2.5758,  5.3404,  1.1515]], device='cuda:0') tensor([[  2.8091,  -1.0363,   2.7685,   3.3377,   0.6261],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-1.1174],
        [-4.3979]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.9623],
        [0.1595]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.0200,  2.9225, -3.0572, -0.6688,  0.1828],
        [ 1.4530,  0.2177,  1.9133,  1.5986,  2.1281]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-4.2907],
        [-2.7837]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.3752],
        [2.4382]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.6418,  1.7366,  2.0896,  5.0183,  0.6736],
        [-1.3234, -0.9856, -0.9270, -1.8609, -0.2132]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192]], device='cuda:0')
POLICY_D = tensor([[-2.3185],
        [-6.8450]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.0439],
        [4.6273]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-3.9451, -4.1108, -1.5483, -1.2207, -3.9398],
        [ 1.5949,  1.7405,  0.5445,  3.9871,  0.4930]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[-0.1324],
        [ 1.6940]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.3350],
        [2.3437]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 3.7745,  0.7896,  4.7381,  5.0946,  4.0849],
        [ 2.5620, -2.5301,  6.3924,  2.1195,  5.9017]], device='cuda:0') tensor([[   5.4266,    3.5033,    4.2645,   25.2893,    1.8892],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[-5.1078],
        [-4.1918]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.9095],
        [2.1587]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -4.5377,   3.6617, -10.4730,  -6.8252, -11.4611],
        [  0.4951,  -4.2269,   5.1079,   3.0053,   6.1600]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192]], device='cuda:0')
POLICY_D = tensor([[-3.6299],
        [-6.9831]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.2851],
        [1.8006]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.2538, -0.4297,  0.8187, -0.5691,  3.0119],
        [-4.0935, -4.0790, -1.7999, -1.3536, -3.8459]], device='cuda:0') tensor([[  3.3377,   0.6261,   5.2086,   5.4266,   3.5033],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[ 0.4161],
        [-3.4488]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.3994],
        [2.3968]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.4113, -3.7020,  1.7578,  1.0363,  2.1198],
        [-0.4449,  4.3920, -5.2051, -6.9541, -1.7565]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-1.5290],
        [-5.5603]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.6322],
        [7.0553]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.9038,  2.4295,  6.1735,  6.4786,  6.3179],
        [-2.5982, -1.0240, -2.7637, -2.5251, -5.7965]], device='cuda:0') tensor([[ 14.0294,   9.4856,  17.2324,  32.4398,   8.4436],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[-5.1783],
        [-7.4062]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.5846],
        [ 2.1519]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -1.0031,  -2.2088,   0.8118,  -0.5137,   2.1288],
        [-11.6068, -11.6287,  -5.0378,  -7.5302,  -1.9412]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[-5.5184],
        [-3.9602]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.7774],
        [0.0254]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  1.8542,   2.8664,  -0.2402,   1.0746,  -0.8804],
        [  5.1214, -22.7496,  31.1072,  10.3300,  28.8215]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-3.4268],
        [-5.1331]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.5930],
        [3.6893]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.0563, -6.5201,  3.7279,  2.1629,  2.8420],
        [-1.5229, -3.3117,  1.1892,  0.6730,  1.3057]], device='cuda:0') tensor([[  9.5115,  -3.1192,  35.2687,  14.0294,   9.4856],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[-2.4968],
        [-2.0788]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[5.1782],
        [5.3244]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  1.8138,   4.8410,   0.0000,  -0.8026,  -4.5150],
        [-12.6362, -16.8815,  -1.1112,  -8.9466,   3.4753]], device='cuda:0') tensor([[  62.8327,    3.1337,    6.5149,   92.0695,   28.0176],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[-5.0562],
        [-0.9967]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.5017],
        [4.6841]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-2.4989, -6.7793,  3.3449,  2.3933,  1.7003],
        [ 2.1195,  5.9017, -2.9942, -3.7239, -4.5150]], device='cuda:0') tensor([[-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820],
        [  1.4983,   9.4701,  -7.6056,   2.0400,  -0.1889]], device='cuda:0')
POLICY_D = tensor([[-1.5762],
        [ 0.1967]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.8149],
        [5.0098]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-13.1492,   3.1464, -22.6152, -11.3114, -14.3819],
        [  1.9906,   5.2702,  -2.5297,  -6.0438,  -3.6801]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862]], device='cuda:0')
POLICY_D = tensor([[ 4.2017],
        [-0.4639]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[6.3604],
        [5.5785]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 6.5971,  5.2365,  4.2859, -3.7163,  4.7715],
        [ 0.8026,  1.2587, -0.1226,  3.1078,  1.5543]], device='cuda:0') tensor([[32.4398,  8.4436, 10.8243, 68.0816, 29.2907],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-7.0866],
        [-6.5480]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.5616],
        [-0.7217]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-12.9620, -15.4592,  -3.0643,   0.5529,   1.6568],
        [ -0.9327,   2.9852,  -4.4656,  -1.6473,  -2.2540]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [  14.0294,    9.4856,   17.2324,   32.4398,    8.4436]],
       device='cuda:0')
POLICY_D = tensor([[-5.3112],
        [-5.9466]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.1743],
        [1.4913]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.8462, -3.6205,  1.0333,  0.6218,  0.3487],
        [-5.8299, -2.9222, -5.5542, -2.6860, -1.3428]], device='cuda:0') tensor([[ 25.2893,   1.8892,   4.3585,   9.5115,  -3.1192],
        [-23.0510,  45.9959, 106.5001, -70.4843, -73.3558]], device='cuda:0')
POLICY_D = tensor([[-10.3770],
        [ -4.6998]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.0834],
        [3.6280]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.2501, 10.3133, -4.4285, -8.9814, -5.7458],
        [-0.5728,  3.7665, -4.7453, -4.8533, -1.6123]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[-1.0891],
        [ 2.7840]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.3259],
        [4.9253]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.4350,  2.1498, -2.8676,  1.4674,  0.0842],
        [ 0.0167, -1.2556,  0.0000,  2.7288,  5.5474]], device='cuda:0') tensor([[ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862],
        [ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889]], device='cuda:0')
POLICY_D = tensor([[-1.7953],
        [-3.5369]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.3289],
        [ 0.5464]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.7775,  8.9970, -0.8164,  3.0947,  0.8112],
        [ 0.7898,  1.0314,  0.0940,  2.8040,  1.7575]], device='cuda:0') tensor([[ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261],
        [ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363]], device='cuda:0')
POLICY_D = tensor([[-1.8673],
        [-4.3017]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.4228],
        [0.4029]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.0656,  6.3425,  0.0000,  4.4695, 10.4363],
        [ 4.1866,  2.0333,  4.0562,  6.1120,  3.5969]], device='cuda:0') tensor([[  9.5115,  -3.1192,  35.2687,  14.0294,   9.4856],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[-4.6632],
        [-4.6138]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.6571],
        [0.9344]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -0.2424,  -7.4626,   7.3744,   4.8814,   8.1079],
        [-17.7173, -30.4272,   5.4428, -11.5982,   7.0359]], device='cuda:0') tensor([[ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824],
        [  5.4266,   3.5033,   4.2645,  25.2893,   1.8892]], device='cuda:0')
POLICY_D = tensor([[-3.8115],
        [-3.8718]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.8313],
        [5.5038]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.7262,  3.2865, -0.8639, -1.0927, -1.2444],
        [ 5.4621,  1.4219,  6.5671,  7.8094,  6.6519]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[-2.3293],
        [-2.3938]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.3547],
        [2.7448]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.9403,  0.3848,  2.4575,  2.4215,  1.8702],
        [ 3.7459, -0.0762,  5.5929,  2.5378,  5.0926]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[-1.7714],
        [-4.5864]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.7317],
        [4.0962]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.9143, -0.2159,  1.5695,  0.2233,  2.7834],
        [-0.7811, -1.8564,  0.7734, -0.9340,  2.4965]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [-23.0510,  45.9959, 106.5001, -70.4843, -73.3558]], device='cuda:0')
POLICY_D = tensor([[-4.1198],
        [-3.9047]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[5.2331],
        [6.1925]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 5.1280,  3.9042,  3.5036, -2.2094,  3.8718],
        [ 4.0084, -2.7370,  0.0000, -0.9205,  3.2275]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [34.7169,  5.4261, 69.8709, 22.9141, 32.9692]], device='cuda:0')
POLICY_D = tensor([[-1.5653],
        [-3.7273]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.7742],
        [2.8983]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-5.9817, -2.4324, -6.2852, -3.0048, -1.6226],
        [-6.7970, -2.2473, -7.6769, -3.5867, -3.0293]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [68.0816, 29.2907, 39.0038, 34.7169,  5.4261]], device='cuda:0')
POLICY_D = tensor([[-9.3878],
        [-6.1058]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[5.2365],
        [5.2385]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  6.8395,   5.9423,   3.9116,  -0.4449,   4.3920],
        [  5.5601,  17.8569, -10.3153, -15.8929,  -7.1783]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-7.9067],
        [-5.5862]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.4335],
        [3.4261]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.7213,  1.0774,  2.8896,  4.7202,  1.6035],
        [-1.0501,  6.3331,  0.0000,  5.0979, 10.8682]], device='cuda:0') tensor([[-3.0788,  3.1862,  3.1986,  2.1446,  0.3748],
        [62.8327,  3.1337,  6.5149, 92.0695, 28.0176]], device='cuda:0')
POLICY_D = tensor([[ 1.8887],
        [-8.9620]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.2079],
        [ 3.1774]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.7659, -0.8814, -6.1022, -3.7208, -5.8530],
        [-5.6954, -2.5634,  0.0000,  1.3132, -1.5504]], device='cuda:0') tensor([[  2.8091,  -1.0363,   2.7685,   3.3377,   0.6261],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[-2.4088],
        [-5.5258]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[2.3835],
        [2.4027]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[3.7824, 2.3127, 0.0000, 3.7882, 6.8239],
        [2.3729, 2.0782, 1.3398, 4.2816, 0.0222]], device='cuda:0') tensor([[14.0294,  9.4856, 17.2324, 32.4398,  8.4436],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-6.3210],
        [-7.6051]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 1.2664],
        [-2.1988]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 1.4192,  4.0554, -2.1123, -4.9223, -1.6889],
        [-1.7645,  0.0390, -2.6378, -1.2378, -3.2909]], device='cuda:0') tensor([[-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01],
        [-7.0484e+01, -7.3356e+01, -8.1583e+01, -1.3267e+02,  6.2144e+01]],
       device='cuda:0')
POLICY_D = tensor([[-5.4191],
        [ 0.5794]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[5.2508],
        [3.2317]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.5560,  9.1028, -2.7241,  1.2299, -3.1131],
        [ 3.5309,  0.2472,  4.9413,  3.3287,  4.2045]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [ 2.0400, -0.1889, -7.6056, -3.0788,  3.1862]], device='cuda:0')
POLICY_D = tensor([[0.2914],
        [0.5086]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-2.1940],
        [ 1.8365]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  1.3387,   3.8506,  -2.0187,  -4.1087,  -1.3762],
        [-14.2795, -20.9202,   0.6539,  10.4463,   0.0282]], device='cuda:0') tensor([[ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824],
        [  2.1446,   0.3748,  -7.8329,   2.8091,  -1.0363]], device='cuda:0')
POLICY_D = tensor([[-5.1151],
        [-3.6009]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.8222],
        [2.5864]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-4.5863, -7.1368,  0.6427,  1.9908,  0.2644],
        [ 1.9403,  0.3848,  2.4575,  2.4215,  1.8702]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-4.1867],
        [-5.3040]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.3297],
        [1.8751]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-11.3806, -10.3645,  -6.0146,  -7.4701,  -3.9117],
        [  1.3972,   3.9938,  -2.0809,  -4.6883,  -1.5973]], device='cuda:0') tensor([[-23.0510,  45.9959, 106.5001, -70.4843, -73.3558],
        [ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959]], device='cuda:0')
POLICY_D = tensor([[-3.3369],
        [-2.7415]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.4560],
        [5.5868]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[8.1528, 9.4993, 2.1597, 0.3885, 1.9246],
        [1.6002, 2.1806, 0.0964, 3.3193, 0.0304]], device='cuda:0') tensor([[ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892],
        [14.0294,  9.4856, 17.2324, 32.4398,  8.4436]], device='cuda:0')
POLICY_D = tensor([[-6.6136],
        [-3.0665]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.1363],
        [0.9337]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-7.7838, -3.8027, -7.5182, -4.5863, -7.1368],
        [ 1.8680,  2.1989,  0.4716,  3.5261, -0.1480]], device='cuda:0') tensor([[68.0816, 29.2907, 39.0038, 34.7169,  5.4261],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[-3.4573],
        [ 1.1698]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.3881],
        [2.0912]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[  5.9153,  12.6734,  -4.4224,  -1.1094,  -1.8931],
        [ -4.6888,   3.1556, -10.1711,  -5.1262, -10.3038]], device='cuda:0') tensor([[ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-3.0375],
        [-4.3510]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.3140],
        [ 3.8368]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.9849, -2.7271,  1.3755,  0.3292,  2.6532],
        [-2.1708, -6.1178,  3.1427,  1.3900,  1.9819]], device='cuda:0') tensor([[ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824],
        [  1.4983,   9.4701,  -7.6056,   2.0400,  -0.1889]], device='cuda:0')
POLICY_D = tensor([[-4.5789],
        [-1.0387]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[5.5484],
        [5.5930]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[1.1108, 0.5846, 1.0295, 2.2089, 1.9577],
        [5.1872, 6.2438, 1.1670, 0.3108, 1.8377]], device='cuda:0') tensor([[ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444],
        [  25.2893,    1.8892,    4.3585,    9.5115,   -3.1192]],
       device='cuda:0')
POLICY_D = tensor([[-2.4653],
        [-6.3695]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.1646],
        [4.1005]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.2349, -0.1025,  0.4520, -0.0305,  2.7441],
        [ 1.8436,  0.0978,  2.6124,  1.6002,  2.1806]], device='cuda:0') tensor([[ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033],
        [-3.0788,  3.1862,  3.1986,  2.1446,  0.3748]], device='cuda:0')
POLICY_D = tensor([[0.4114],
        [3.7680]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.6846],
        [3.0334]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.0642,  2.8578,  0.0778,  1.2837, -0.9558],
        [ 1.1449,  0.5707,  1.0941,  2.2064,  1.9493]], device='cuda:0') tensor([[ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337],
        [  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862]], device='cuda:0')
POLICY_D = tensor([[-6.2300],
        [-0.7274]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.8301],
        [1.0252]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.2750,  2.7526, -2.4468,  0.2729,  0.4892],
        [ 1.4586,  3.6745, -1.6598, -3.2188, -1.3586]], device='cuda:0') tensor([[-2.5980e+01, -8.2447e-02, -4.2657e-01,  1.6307e+01,  1.6882e+01],
        [ 6.2833e+01,  3.1337e+00,  6.5149e+00,  9.2069e+01,  2.8018e+01]],
       device='cuda:0')
POLICY_D = tensor([[-7.2728],
        [-9.5543]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.6233],
        [3.4390]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 7.8104,  0.2354, 11.2530,  6.6924, 11.1944],
        [-2.2130, -0.2984, -2.9484, -2.0027, -5.0638]], device='cuda:0') tensor([[25.2893,  1.8892,  4.3585,  9.5115, -3.1192],
        [ 9.5115, -3.1192, 35.2687, 14.0294,  9.4856]], device='cuda:0')
POLICY_D = tensor([[-9.7309],
        [-7.2015]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-0.7734],
        [ 2.3776]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ -1.1141,   3.5049,  -5.2710,  -4.0477,  -3.5363],
        [ -2.7428, -14.1395,  10.6111,  10.5610,  10.3010]], device='cuda:0') tensor([[34.7169,  5.4261, 69.8709, 22.9141, 32.9692],
        [ 3.3377,  0.6261,  5.2086,  5.4266,  3.5033]], device='cuda:0')
POLICY_D = tensor([[-5.7434],
        [-1.0561]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[ 5.3087],
        [-0.0129]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 7.8085,  6.6293,  4.6261,  4.9478,  4.6376],
        [-3.2296, -3.9912, -0.6192, -0.5371, -3.7241]], device='cuda:0') tensor([[  2.0400,  -0.1889,  -7.6056,  -3.0788,   3.1862],
        [-25.9803,  -0.0824,  -0.4266,  16.3075,  16.8820]], device='cuda:0')
POLICY_D = tensor([[ 0.3562],
        [-5.0589]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.1689],
        [3.4154]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 2.3877,  5.9494, -2.6489, -3.3138, -4.6854],
        [-0.5632,  4.0377,  0.0000, -3.5907, -4.8624]], device='cuda:0') tensor([[ 92.0695,  28.0176,  89.2431, -23.0510,  45.9959],
        [-23.0510,  45.9959, 106.5001, -70.4843, -73.3558]], device='cuda:0')
POLICY_D = tensor([[-3.3371],
        [-1.9354]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[3.4924],
        [5.5264]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 4.4028,  1.7692,  4.6480,  6.7213,  4.4222],
        [ 0.9616, -0.1577,  1.5789,  0.3714,  2.7117]], device='cuda:0') tensor([[ 2.1446,  0.3748, -7.8329,  2.8091, -1.0363],
        [ 2.8091, -1.0363,  2.7685,  3.3377,  0.6261]], device='cuda:0')
POLICY_D = tensor([[-4.0850],
        [ 0.0371]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[0.9159],
        [3.8537]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 6.0202,  2.7561,  6.0065,  5.0276,  6.1792],
        [ 5.7800,  4.5833,  3.7598, -4.3048,  4.4220]], device='cuda:0') tensor([[ -3.0788,   3.1862,   3.1986,   2.1446,   0.3748],
        [ 16.3075,  16.8820, -38.1576,  62.8327,   3.1337]], device='cuda:0')
POLICY_D = tensor([[ 2.2487],
        [-6.4110]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.4759],
        [3.6622]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[4.0980, 0.6880, 5.3194, 5.1163, 4.9603],
        [7.3250, 6.4908, 4.0580, 3.5906, 4.2902]], device='cuda:0') tensor([[ 68.0816,  29.2907,  39.0038,  34.7169,   5.4261],
        [ 22.9141,  32.9692,  45.4819, -25.9803,  -0.0824]], device='cuda:0')
POLICY_D = tensor([[-7.4130],
        [-7.4426]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[-1.6481],
        [ 1.2494]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[ 0.3720,  0.2940,  0.2430,  0.9154,  2.4672],
        [ 2.7536,  3.9572, -0.0463, -3.7855, -2.0018]], device='cuda:0') tensor([[62.8327,  3.1337,  6.5149, 92.0695, 28.0176],
        [32.4398,  8.4436, 10.8243, 68.0816, 29.2907]], device='cuda:0')
POLICY_D = tensor([[-8.4451],
        [-7.0817]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[1.6460],
        [2.3140]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-6.2661, -0.9287, -8.2616, -4.5065, -2.8615],
        [ 1.0822,  2.4292, -0.9237,  2.1430,  0.2809]], device='cuda:0') tensor([[ 1.4983,  9.4701, -7.6056,  2.0400, -0.1889],
        [ 5.4266,  3.5033,  4.2645, 25.2893,  1.8892]], device='cuda:0')
POLICY_D = tensor([[-3.8823],
        [-6.7622]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.3841],
        [0.2825]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-0.3255, -6.5565,  6.3134,  3.3888,  7.2833],
        [ 5.0153,  0.6613,  6.6975,  5.8571,  6.7445]], device='cuda:0') tensor([[  14.0294,    9.4856,   17.2324,   32.4398,    8.4436],
        [ -70.4843,  -73.3558,  -81.5828, -132.6737,   62.1444]],
       device='cuda:0')
POLICY_D = tensor([[-1.6392],
        [-6.1739]], device='cuda:0', grad_fn=<AddmmBackward>)
EXPERT_D = tensor([[4.4923],
        [2.6777]], device='cuda:0', grad_fn=<AddmmBackward>)
tensor([[-1.7884, -6.2124,  3.8036,  1.8273,  3.4061],
        [-0.5632,  4.0377,  0.0000, -3.5907, -4.8624]], device='cuda:0') tensor([[  5.4266,   3.5033,   4.2645,  25.2893,   1.8892],
Error in sys.excepthook:
Traceback (most recent call last):
